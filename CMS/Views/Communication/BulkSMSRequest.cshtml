@model TIPS.Entities.CommunictionEntities.ComposeSMSInfo
@{
    ViewBag.Title = "BulkSMSRequest";
    Layout = "~/Views/Shared/NewAceMaster.cshtml";
}
<style type="text/css">
    .ui-jqgrid .ui-pg-input {
        width: 30px;
    }

    .ui-jqgrid .ui-pg-selbox {
        width: 50px;
        height: 23px;
    }

    #dvLoading {
        background: url("../../../Images/ajax-loader.gif") no-repeat center center;
        height: 100%;
        width: 100%;
        position: fixed;
        z-index: 1000;
        left: 0%;
        top: 15%;
        margin: -25px 0 0 -25px;
    }
</style>
@*<link href="@Url.Content("~/Content/BootStrap/BootStrap.css")" rel="stylesheet" type="text/css" />*@
<script src="@Url.Content("~/Scripts/BootStrap/bootstrap-maxlength.js")" type="text/javascript"></script>
@*<script type="text/javascript" src="@Url.Content("~/Scripts/ui.dropdownchecklist-1.4-min.js")" ></script>*@
<script type="text/javascript">

    function validate3() {
        if (document.getElementById("templateddl").value == "") {
            ErrMsg("Please Select Template!");
            return false;
        }
        else if (($('#tempdate').is(':visible')) && (document.getElementById("tempdate").value == "")) {
            ErrMsg("Please From Select Date!");
            return false;
        }
        else if (($('#tempdate1').is(':visible')) && (document.getElementById("tempdate1").value == "")) {
            ErrMsg("Please Select Date!");
            return false;
        }
        else if (($('#tempdate2').is(':visible')) && (document.getElementById("tempdate2").value == "")) {
            ErrMsg("Please Select ToDate!");
            return false;
        }
        else if (($('#reason').is(':visible')) && (document.getElementById("reason").value == "")) {
            ErrMsg("Please Enter Reason!");
            return false;
        }
        else if (($('#tempterm').is(':visible')) && (document.getElementById("tempterm").value == "")) {

            ErrMsg("Please Select Term!");
            return false;
        }
        else if (($('#temptime').is(':visible')) && (document.getElementById("temptime").value == "")) {

            ErrMsg("Please Enter Time!");
            return false;
        }
        else if ((document.getElementById('smsFather').checked == false) && (document.getElementById('smsMother').checked == false)) {
            ErrMsg("Please Check To Whom Do You Want To Send The SMS!");
            return false;
        }
        else if (document.getElementById("SMSMessage").value == "") {
            ErrMsg("Please Type Message Content!");
            return false;
        }
        $('#SMSRecipients').show();
        $('#testMsg').show();
        $('#SMSCredit').show();
    }

    $(document).ready(function () {

        $('.clockpicker').clockpicker();


        $('#Grade').multiselect({
            includeSelectAllOption: true,
            selectAllText: ' Select all',
            enableCaseInsensitiveFiltering: true,
            enableFiltering: true,
            maxHeight: '300',
            numberDisplayed: 4,
            includeSelectAllDivider: true
        });
        $('#Section').multiselect({
            includeSelectAllOption: true,
            selectAllText: ' Select all',
            enableCaseInsensitiveFiltering: true,
            enableFiltering: true,
            maxHeight: '300',
            numberDisplayed: 3,
            includeSelectAllDivider: true
        });



        //Validation Date Picker
        var startDate = new Date();
        var FromEndDate = new Date();
        var ToEndDate = new Date();

        ToEndDate.setDate(ToEndDate.getDate() + 365);

        $('.txtPublishDate').datepicker({
            format: "dd/mm/yyyy",
            weekStart: 1,
            startDate: startDate,
            autoclose: true
        }).on('changeDate', function (selected) {
            startDate = new Date(selected.date.valueOf());
            startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
            $('.txtExpireDate').datepicker('setStartDate', startDate);
        });
        $('.txtExpireDate').datepicker({
            format: "dd/mm/yyyy",
            weekStart: 1,
            startDate: startDate,
            endDate: ToEndDate,
            autoclose: true
        }).on('changeDate', function (selected) {
            FromEndDate = new Date(selected.date.valueOf());
            FromEndDate.setDate(FromEndDate.getDate(new Date(selected.date.valueOf())));
            $('.txtPublishDate').datepicker('setEndDate', FromEndDate);
        });





        //resize to fit page size
        $(window).on('resize.jqGrid', function () {

            $(grid_selector).jqGrid('setGridWidth', $(".page-content").width());
        })
        //resize on sidebar collapse/expand 
        var parent_column = $(grid_selector).closest('[class*="col-"]');
        $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
            if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                setTimeout(function () {
                    $(grid_selector).jqGrid('setGridWidth', parent_column.width());
                }, 0);
            }
        })

        //pager icon


        //replace icons with FontAwesome icons like above
        function updatePagerIcons(table) {
            var replacement =
                {
                    'ui-icon-seek-first': 'ace-icon fa fa-angle-double-left bigger-140',
                    'ui-icon-seek-prev': 'ace-icon fa fa-angle-left bigger-140',
                    'ui-icon-seek-next': 'ace-icon fa fa-angle-right bigger-140',
                    'ui-icon-seek-end': 'ace-icon fa fa-angle-double-right bigger-140'
                };
            $('.ui-pg-table:not(.navtable) > tbody > tr > .ui-pg-button > .ui-icon').each(function () {
                var icon = $(this);
                var $class = $.trim(icon.attr('class').replace('ui-icon', ''));

                if ($class in replacement) icon.attr('class', 'ui-icon ' + replacement[$class]);
            })
        }

        function enableTooltips(table) {
            $('.navtable .ui-pg-button').tooltip({ container: 'body' });
            $(table).find('.ui-pg-div').tooltip({ container: 'body' });
        }


        $(document).on('ajaxloadstart', function (e) {
            $(grid_selector).jqGrid('GridUnload');
            $('.ui-jqdialog').remove();
        });



        $('#dvLoading').hide() // hide it initially.
        .ajaxStart(function () {
            $(this).show(); // show on any Ajax event.
        })
        .ajaxStop(function () {
            $(this).hide(); // hide it when it is done.
        });

        VanNumberddl('@Model.Campus');
        $("#vanno").val('@Model.VanNo');
        // Refreshddl();
        Templatechange();
        var MaxLen = 0;
        $('#bulkcontent').maxlength({
            alwaysShow: true,
            placement: 'bottom-right'
        });

        $('#reason').maxlength({
            alwaysShow: true,
            placement: 'bottom-right'
        });
        if ('@Model.Id' == 0) {
            $('#SMSRecipients').hide();
            $('#testMsg').hide();
            $('#SMSCredit').hide();
        }
        else {
            $('#testMsg').show();
            $('#SMSCredit').show();
            $('#SMSbtn').attr('disabled', true);
        }
        if ('@Model.SMSTemplateValue' != "") {
            $('#smsFather').attr('disabled', true);
            $('#smsMother').attr('disabled', true);
            $('#templateddl').attr("disabled", true);
            $('#tempdate').attr("disabled", true);
            $('#tempdate1').attr("disabled", true);
            $('#tempdate2').attr("disabled", true);
            $("#tempterm").attr("disabled", true);
            $('#reason').attr("disabled", true);
            $('#bulkcontent').attr("disabled", true);
            $("#temptime").attr("disabled", true);
        }
        if ('@Model.Status' == "Message Sent") {
            debugger;
            $('#SelectedSend').hide();
            $('#newMessage :input').each(function () {

                $(this).attr('disabled', true);
            });
            $('#clearList').attr('disabled', true);
            $('#cancel').attr('disabled', false);

        }

        $("#templateddl").change(function () {
            Templatechange();
        });

        function Templatechange() {

            var e = document.getElementById('templateddl');
            var str = e.options[e.selectedIndex].value;
            var MaxLen = 0;
            if (e.options[e.selectedIndex].text == "Custom Template")
                MaxLen = 159;
            else
                MaxLen = 153 - str.length;
            $("#bulkcontent").attr('maxlength', MaxLen);
            $("#reason").attr('maxlength', MaxLen);
            if ('@Model.Id' == 0) {
                $('#tempdate').val('');
                $('#tempdate1').val('');
                $('#tempdate2').val('');
                $('#reason').val('');
                $('#bulkcontent').val('');
            }
            var f = document.getElementById('tempterm');
            f.options[0].selected = true; // "Select";
            document.getElementById('templateddl1').value = e.options[e.selectedIndex].text;

            if (e.options[e.selectedIndex].text == 'School Closed for 1 Day') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "block";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
                document.getElementById('timedivh').style.display = "none";
            }
            else if (e.options[e.selectedIndex].text == 'School Closed for more than 1 Day') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "block";
                document.getElementById('from1').style.display = "block";
                document.getElementById('from2').style.display = "none";
                document.getElementById('Datediv2h').style.display = "block";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
                document.getElementById('timedivh').style.display = "none";
            }
            else if (e.options[e.selectedIndex].text == 'Fees Reminder') {
                document.getElementById('termdivh').style.display = "block";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";

            }
            else if (e.options[e.selectedIndex].text == 'SLC Date') {
                document.getElementById('termdivh').style.display = "block";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "block";
                document.getElementById("SMSText").innerHTML = "";
            }
            else if ((e.options[e.selectedIndex].text == 'Open house meeting') || (e.options[e.selectedIndex].text == 'Open house meeting (KG)')) {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "block";
                document.getElementById("SMSText").innerHTML = "";
            }
            else if (e.options[e.selectedIndex].text == 'No Transport') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
            }
            else if (e.options[e.selectedIndex].text == 'Bus time change') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "block";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('timedivh').style.display = "block";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                //-----
                document.getElementById("SMSText").innerHTML = "";
                //  ShowMessage();
            }
            else if (e.options[e.selectedIndex].text == 'School reopens') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
            }
            else if ((e.options[e.selectedIndex].text == 'Thankyou') || (e.options[e.selectedIndex].text == 'Attention') || (e.options[e.selectedIndex].text == 'Information')) {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "none";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "block";
                document.getElementById('bulkcontentdiv').style.display = "block";
                document.getElementById('timedivh').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
            }
            else if (e.options[e.selectedIndex].text == 'Management Review Meeting') {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "block";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "block";
                document.getElementById("SMSText").innerHTML = "";
            }
            else {
                document.getElementById('termdivh').style.display = "none";
                document.getElementById('Reasondivh').style.display = "none";
                document.getElementById('from1').style.display = "none";
                document.getElementById('from2').style.display = "none";
                document.getElementById('Datediv2h').style.display = "none";
                document.getElementById('bulkcontentdivh').style.display = "none";
                document.getElementById('bulkcontentdiv').style.display = "none";
                document.getElementById('timedivh').style.display = "none";
                document.getElementById("SMSText").innerHTML = "";
            }
        }
        /*-------------------------------------------section--------------------------------------------------*/
        $("#Section").empty();
        //  $("#Section").append("<option value=' '> All </option>");
        // $("#Section").dropdownchecklist('destroy');
        $("#Section").append("<option value='A'>A</option>");
        $("#Section").append("<option value='B'>B</option>");
        $("#Section").append("<option value='C'>C</option>");
        $("#Section").append("<option value='D'>D</option>");
        $("#Section").append("<option value='E'>E</option>");
        $("#Section").append("<option value='F'>F</option>");
        $('#Section').multiselect('rebuild');
        if ('@Model.Section' != "" & '@Model.Section' != null) {
            var sec = '@Model.Section';
            var secArr = sec.split(',');

            if (secArr != "") {
                for (var j = 0; j < secArr.length; j++) {
                    $('#Section option').filter(function () { return $(this).text() == '' + secArr[j] + '' }).attr('selected', 'selected').prop('checked', true);
                }
            }
        }
        //$("#Section").dropdownchecklist({
        //    firstItemChecksAll: true,
        //    maxDropHeight: 150,
        //    Height: 80,
        //    width: 150
        //});
        /*------------------------------------------------End section-----------------------------------------------*/
        $("#tempdate").change(function () {
            ShowMessage();
        });
        $("#tempterm").change(function () {
            ShowMessage();
        });
        $("#tempdate1").change(function () {
            ShowMessage();
        });
        $("#tempdate2").change(function () {
            ShowMessage();
        });
        $("#temptime").change(function () {
            ShowMessage();
        });
        $("#reason").keyup(function () {
            ShowMessage();
        });
        $('#bulkcontent').keyup(function () { ShowMessage(); });
        GetGrade();
        $("#Campus").change(function () {
            var campus = $('#Campus').val();
            GetGrade();
            VanNumberddl(campus);
        });
        $('#search').click(function () {
            if ($('#Campus').val() == "") { ErrMsg("Please fill the Campus"); return false; }
            else if ($('#admstats').val() == "") { ErrMsg("Please Select the Admission Status"); return false; }
            else {
                var Grad = $("#Grade").val();
                var Sec = $("#Section").val();
                if (Grad != "" && Grad != null) {
                    Grad = $('#Grade').val().toString();
                }
                if (Sec != "" && Sec != null) {
                    Sec = $('#Section').val().toString();
                }
                var AppliedFrmDate = $('#txtAppliedFrmDate').val();
                var AppliedToDate = $('#txtAppliedToDate').val();
                $("#BulkSMSGrid").setGridParam(
                {
                    datatype: "json",
                    url: '@Url.Content("~/Communication/BulkSMSRequestJqGrid")',
                    postData: {
                        Campus: $('#Campus').val(),
                        Grade: Grad, Section: Sec,
                        AdStatus: $('#admstats').val(),
                        Name: $('#appname').val(),
                        NewId: $('#idnumber').val(),
                        StIshostel: $('#ishosteller').val(),
                        AcYear: $('#academicyear').val(),
                        VanNo: $('#vanno').val(),
                        saveOrClear: "",
                        SMSComposeId: $('#Id').val(),
                        AppliedFrmDate: AppliedFrmDate,
                        AppliedToDate: AppliedToDate
                    },
                    page: 1
                }).trigger("reloadGrid");
            }
        });
        $('#reset').click(function () {
            $("#BulkSMSGrid").setGridParam(
                {
                    datatype: "json",
                    url: '@Url.Content("~/Communication/JqgridBulkEmailRequest")',
                    postData: { Id: 0, Campus: "", Grade: "", Section: "", saveOrClear: "", ComposeId: 0 },
                    page: 1
                }).trigger("reloadGrid");
            $('#txtAppliedFrmDate').val('');
            $('#txtAppliedToDate').val('');
            $('#Campus').val('');
            $('#admstats').val('');
            $('#appname').val('');
            $('#idnumber').val('');
            $('#ishosteller').val('');
            $('#academicyear').val('');
            $('#Grade').attr('selected', false)
            // $('#Section').dropdownchecklist('destroy');
            $('#Section option').each(function () {
                $(this).attr('selected', false);
            });
            //$("#Section").dropdownchecklist({
            //    firstItemChecksAll: true,
            //    maxDropHeight: 150,
            //    Height: 80,
            //    width: 155
            //});
            //  $('#Grade').dropdownchecklist('destroy');
            $('#Grade option').each(function () {
                $(this).attr('selected', false);
            });
            //Refreshddl();
        });
        //send Selected SMS
        $('#SelectedSend').click(function () {
            var IdKeyValues = $("#BulkSMSGrid").jqGrid('getGridParam', 'selarrrow');
            if (IdKeyValues.length === 0) { ErrMsg("Please, select row"); return false; }
            else {
                $.ajax({
                    type: 'POST',
                    async: false,
                   // url: "/Communication/SendSelectedSMSFunction?IdKeyValues=" + IdKeyValues + '&SMSComposeId=' + $('#Id').val(),
                    success: function (data) {
                    }
                });
            }
        });
        //send Test Message
        $('#tstSMS').click(function () {
            var txtMobileNum = $('#txtTestMsg').val();
            if (txtMobileNum.length > 0) {
                $.ajax({
                    type: 'POST',
                    async: false,
                    url: "/Communication/SendTestSMSFunction?TestNumber=" + txtMobileNum + '&SMSComposeId=' + $('#Id').val(),
                    success: function (data) {
                        if (data != null)
                            InfoMsg(data);
                        else
                            ErrMsg("Sending Message Error");
                    }
                });
            }
            else
                ErrMsg("Enter test mobile Number");

        });
        $('#SMSCreditbtn').click(function () {
            $.ajax({
                type: 'POST',
                async: false,
                url: "/Communication/TestSMSCreditFunction",
                success: function (data) {
                    if (data != null) {
                        document.getElementById("SMSCreditShow").innerHTML = data;
                    }
                }
            });
        });

        $('#saveList').click(function () {
            if ($('#Campus').val() == "") { ErrMsg("Please fill the Campus"); return false; }
            else if ($('#admstats').val() == "") { ErrMsg("Please Select the Admission Status"); return false; }
            else {
                $('#cancel').attr('disabled', false);
                $('#saveList').attr('disabled', true);
                $('#clearList').attr('disabled', false);
                $('#sendBulkSMS').attr('disabled', false);
                var Grad = $("#Grade").val();
                var Sec = $("#Section").val();
                if (Grad != "" && Grad != null) {
                    Grad = $('#Grade').val().toString();
                }
                if (Sec != "" && Sec != null) {
                    Sec = $('#Section').val().toString();
                }
                var AppliedFrmDate = $('#txtAppliedFrmDate').val();
                var AppliedToDate = $('#txtAppliedToDate').val();
                $("#BulkSMSGrid").setGridParam({
                    datatype: "json",
                    url: '@Url.Content("~/Communication/BulkSMSRequestJqGrid")',
                    postData: { Campus: $('#Campus').val(), Grade: Grad, Section: Sec, saveOrClear: "Save", SMSComposeId: $('#Id').val(), AppliedFrmDate: AppliedFrmDate, AppliedToDate: AppliedToDate },
                    page: 1
                }).trigger("reloadGrid");
                $('#clearList').show();
                $('#reset').attr('disabled', true);
                $('#idnumber').attr('disabled', true); $('#ishosteller').attr('disabled', true);
                $('#academicyear').attr('disabled', true); $('#admstats').attr('disabled', true);
                $('#appname').attr('disabled', true); $('#vanno').attr('disabled', true);
                $('#Campus').attr('disabled', true); $('#Grade').attr('disabled', true);
                $('#Section').attr('disabled', true); $('#search').attr('disabled', true);
                $('#sendBulkSMS').show();
                $('#Suspended').show();
                $('#SelectedSend').show();
                $('#edit_BulkSMSGrid').show();
                $('#del_BulkSMSGrid').show();
                $('#BulkSMSGrid').trigger("reloadGrid");
            }
        });
        $('#sendBulkSMS').click(function () {
            $.ajax({
                type: 'POST',
                async: false,
                url: '/Communication/CheckSMSCredit?SMSComposeId=' + $('#Id').val(),
                success: function (data) {
                    if (data == "Success") {
                        $.ajax({
                            type: 'GET',
                            async: false,
                            dataType: "json",
                            url: '/Communication/SendBulkSMS?SMSComposeId=' + $('#Id').val(),
                            success: function (data) {
                                if (data != null) {
                                    InfoMsg("Bulk send SMS has been initiated and in progress", function () { window.location.href = '@Url.Action("SMSSendingLog", "Communication")'; });
                                }
                            }
                        });
                    }
                    else { ErrMsg("Insufficient Message Credit"); return false; }
                }
            });
        });
        $('#Suspended').click(function () {
            $('#SMSRecipients :input').each(function () {
                $(this).attr('disabled', false);
            });
            if ($('#Campus').val() == "") { ErrMsg("Please fill the Campus"); return false; }
            Id = $('#Id').val();
            LoadPopupDynamicaly('/Communication/SMSSuspend?SMSComposeId=' + Id, $('#divSuspendReson'), function () { }, function () { }, 400);
            $('#clearList').attr('disabled', true);
            $('#sendBulkSMS').attr('disabled', true);
            $('#SelectedSend').attr('disabled', true);
            $('#Suspended').attr('disabled', true);
        });
        $('#clearList').click(function () {
            $('#SMSRecipients :input').each(function () {
                $(this).attr('disabled', false);
            });
            $('#Suspended').hide();
            if ($('#Campus').val() == "") { ErrMsg("Please fill the Campus"); return false; }
            var Grad = $("#Grade").val();
            var Sec = $("#Section").val();
            if (Grad != "" && Grad != null) {
                Grad = $('#Grade').val().toString();
            }
            if (Sec != "" && Sec != null) {
                Sec = $('#Section').val().toString();
            }
            $("#BulkSMSGrid").setGridParam(
                {
                    datatype: "json",
                    url: '@Url.Content("~/Communication/BulkSMSRequestJqGrid")',
                    postData: { Campus: $('#Campus').val(), Grade: Grad, Section: Sec, saveOrClear: "Clear", SMSComposeId: $('#Id').val() },
                    page: 1
                }).trigger("reloadGrid");
            $('#sendBulkSMS').hide();
            $('#Suspended').hide();
            $('#SelectedSend').hide();
            $('#edit_BulkSMSGrid').hide();
            $('#del_BulkSMSGrid').hide();
        });
        $('#cancel').click(function () {
            window.location.href = '@Url.Action("SMSSendingLog", "Communication")';
        });

        var grid_selector = "#BulkSMSGrid";
        var pager_selector = "#BulkSMSGridPager";
        $(grid_selector).jqGrid({
            url: '/Communication/BulkSMSRequestJqGrid?SMSComposeId=' + '@Model.Id',
            type: 'GET',
            datatype: 'json',
            colNames: ['Id', 'IdKeyValue', 'PreRegNum', 'NewId', 'Name', 'Campus', 'Grade', 'Section', 'IsHosteller', 'Academic Year', 'Admission Status', 'Route No', 'Status', 'Parent Type', 'MobileNumber', 'Applied Date', 'Created Date', 'Modified Date', 'SentSMSStatusWithTid', 'SentSMSReportsWithStatus'],
            colModel: [
            { name: 'Id', index: 'Id', hidden: true, editable: true, editoptions: { disabled: true, class: 'NoBorder' } },
            { name: 'IdKeyValue', index: 'IdKeyValue', editable: true, key: true, width: 50, hidden: true },
            { name: 'PreRegNum', index: 'PreRegNum', hidden: true, width: 35, editable: true, editoptions: { disabled: true, class: 'NoBorder' } },
            { name: 'NewId', index: 'NewId', width: 50 },
            { name: 'Name', index: 'Name', editable: true, editoptions: { disabled: true, class: 'NoBorder' } },
            { name: 'Campus', index: 'Campus', width: 50 },
            { name: 'Grade', index: 'Grade', width: 50 },
            { name: 'Section', index: 'Section', width: 50 },
            { name: 'IsHosteller', index: 'IsHosteller', width: 50, search: false },
            { name: 'AcademicYear', index: 'AcademicYear', width: 50 },
            { name: 'AdmissionStatus', index: 'AdmissionStatus', width: 50 },
            { name: 'VanNo', index: 'VanNo', width: 50 },
            { name: 'Status', index: 'Status', width: 50, stype: 'select', searchoptions: { sopt: ["eq", "ne"], value: ":All;Success:Success;Number wrong:Number wrong;InProgress:InProgress;No Phone Number:No Phone Number" } },
            { name: 'FamilyDetailType', index: 'FamilyDetailType', width: 80, editable: true, search: false },
            {
                name: 'MobileNumber', index: 'MobileNumber', width: 80, editable: true, search: false, editoptions: {
                    dataInit: function (elem) {
                        $(elem).keyup(function () {
                            var enteredval = elem.value;
                            var num = new Number(enteredval);
                            if (isNaN(num))
                            { ErrMsg("Please enter only number!"); }
                            else if (num.length > 10)
                            { ErrMsg("Please enter only 10 numbers!"); }
                        })
                    }
                }
            },
            { name: 'AppliedDate', index: 'AppliedDate', width: 50, search: false, hidden: false },
            { name: 'SMSRecipientCreatedDate', index: 'SMSRecipientCreatedDate', width: 50, search: false, hidden: true },
            { name: 'SMSRecipientModifiedDate', index: 'SMSRecipientModifiedDate', width: 50, search: false, hidden: true },
            { name: 'SentSMSStatusWithTid', index: 'SentSMSStatusWithTid', width: 30, editable: true, hidden: true, search: false },
            { name: 'SentSMSReportsWithStatus', index: 'SentSMSReportsWithStatus', width: 30, editable: true, hidden: true, search: false },
            ],
            autowidth: true,
            height: 200,
            rowNum: 150,
            rowList: [150, 200],
            viewrecords: true,
            multiselect: true,
            pager: pager_selector,
            sortname: 'Id',
            sortorder: 'Desc',
            caption: 'Bulk SMS Request',
            loadComplete: function () {
                var table = this;
                setTimeout(function () {
                    updatePagerIcons(table);
                    enableTooltips(table);
                }, 0);
            },
        });
        $(grid_selector).navGrid(pager_selector, {
            add: false, edit: true, del: true, search: false, refresh: true,
            refreshicon: 'ace-icon fa fa-refresh green'
        },
        {
            url: '/Communication/EditSMSRecipient?SMSComposeId=' + $('#Id').val(), width: 450, beforeSubmit: function (postdata, formid) {
                ;
                if (postdata.MobileNumber != "") {
                    if (postdata.MobileNumber.length > 10)
                        return [false, 'Invalid Mobile Number.'];
                }
                return [true, '']; // no error
            }, closeAfterEdit: true
        }, {},
        {
            url: '/Communication/DeleteSMSRecip?SMSComposeId=' + $('#Id').val(), left: '10%', top: 200, height: '50%', width: 400, beforeShowForm: function (params) {
                selectedrows = $(grid_selector).jqGrid('getGridParam', 'selarrrow'); return { Id: selectedrows }
            }

        });

        if ('@Model.IsSaveList' == "False") {
            $('#clearList').hide();
            $('#sendBulkSMS').hide();
            $('#SelectedSend').hide();
            $('#Suspended').hide();
            $('#edit_BulkSMSGrid').hide();
            $('#del_BulkSMSGrid').hide();
        }
        else {
            $('#saveList').attr('disabled', true);
            $('#edit_BulkSMSGrid').show();
            $('#del_BulkSMSGrid').show();
            $('#idnumber').attr('disabled', true);
            $('#ishosteller').attr('disabled', true);
            $('#academicyear').attr('disabled', true);
            $('#vanno').attr('disabled', true);
            $('#admstats').attr('disabled', true);
            $('#appname').attr('disabled', true);
            $('#newMessage :input').each(function () {
                $(this).attr('disabled', true);
            });
            $('#reset').attr('disabled', true); $('#Campus').attr('disabled', true); $('#Grade').attr('disabled', true);
            $('#Section').attr('disabled', true); $('#search').attr('disabled', true);
            $('#sendBulkSMS').attr('disabled', false);
            $('#cancel').attr('disabled', false);

        }
        if ('@Model.BulkSMSSent' == "True") {
            $('#newMessage :input').each(function () {
                $(this).attr('disabled', true);
            });
            $('#cancel').attr('disabled', false);
            $('#SelectedSend').attr('disabled', false);
            $('#Suspended').hide();
            $('#clearList').attr('disabled', true);
            $('#edit_BulkSMSGrid').hide();
            $('#del_BulkSMSGrid').hide();
        }
        if ('@Model.Suspended' == "True") {
            $('#newMessage :input').each(function () {
                $(this).attr('disabled', true);
            });
            $('#SMSRecipients :input').each(function () {
                $(this).attr('disabled', true);
            });
            $('#cancel').attr('disabled', false);
        }
        $.getJSON("/Base/FillBranchCode",
    function (fillig) {
        var ddlcam = $("#Campus"); ddlcam.empty();
        ddlcam.append($('<option/>', { value: "", text: "Select One" }));
        $.each(fillig, function (index, itemdata) {
            ddlcam.append($('<option/>', { value: itemdata.Value, text: itemdata.Text }));
            if ('@Model.Id' != 0) {
                $('#Campus').val() == '@Model.Grade'
            }
        });
    });

        $("#txtAppliedFrmDate").datepicker({
            showOn: "button",
            dateFormat: "dd/mm/yy",
            buttonImage: "../../Images/date.gif",
            buttonImageOnly: true,
            changeYear: true,
            changeMonth: true,
            //buttonImageSize: "30px",
            //dateFormat: "dd/mm/yy",
            maxDate: 0,
            numberOfMonths: 1,
            // beforeShowDay: function (date) {
            // var day = date.getDay();
            // return [(day != 0), ''];
            // },
            onSelect: function (selected) {
                $("#txtAppliedToDate").datepicker("option", "minDate", selected)
                function parseDate(str) {
                    var mdy = str.split('/')
                    return new Date(mdy[2], mdy[1], mdy[0] - 1);
                }
                function daydiff(SDate, EDate) {
                    return (EDate - SDate) / (1000 * 60 * 60 * 24)
                }
                var datevalue = daydiff(parseDate($("#txtAppliedFrmDate").val()), parseDate($("#txtAppliedToDate").val()));
            }

        });



        $("#txtAppliedToDate").datepicker({
            showOn: "button",
            dateFormat: "dd/mm/yy",
            buttonImage: "../../Images/date.gif",
            buttonImageOnly: true,
            changeYear: true,
            changeMonth: true,
            maxDate: 0,
            numberOfMonths: 1,
            onSelect: function (selected) {
                $("#txtAppliedFrmDate").datepicker("option", "maxDate", selected)
                function parseDate(str) {
                    var mdy = str.split('/')
                    return new Date(mdy[2], mdy[1], mdy[0] - 1);
                }
                function daydiff(SDate, EDate) {
                    return (EDate - SDate) / (1000 * 60 * 60 * 24)
                }
                var datevalue = daydiff(parseDate($("#txtAppliedFrmDate").val()), parseDate($("#txtAppliedToDate").val()));
            }
        });

    });
/*---------------------------------grade---------------------------*/
//--------------Van No------------------------/
function VanNumberddl(campus) {
    if (campus != "") {
        $.getJSON("/Base/GetVanRouteNoByCampus", { campus: campus },
    function (fillig) {
        var ddlcam = $("#vanno");
        ddlcam.empty();
        ddlcam.append($('<option/>', { value: "", text: "Select One" }));
        $.each(fillig, function (index, itemdata) { ddlcam.append($('<option/>', { value: itemdata.Value, text: itemdata.Text })); });
    });
    }
    $("#vanno").val('@Model.VanNo');
}
//-----------------End Van No--------------------/
function GetGrade() {
    var campus = $("#Campus").val();

    $.ajax({
        type: 'POST',
        async: false,
        dataType: "json",
        url: '/Communication/FillGrades?campus=' + campus,
        success: function (data) {
            $("#Grade").empty();
            //   $("#Grade").dropdownchecklist('destroy');
            if (data != null) {
                //  $("#Grade").append("<option value=' '> All </option>");
                for (var k = 0; k < data.length; k++) {
                    $("#Grade").append("<option value='" + data[k].Value + "'>" + data[k].Text + "</option>");
                    //$("#ddlGrades option:selected").prop("selected", false);
                }
                var grade = '@Model.Grade';
                var GradeArr = grade.split(',');
                if (GradeArr != undefined & GradeArr != null) {
                    for (var j = 0; j < GradeArr.length; j++) {
                        $('#Grade option').filter(function () { return $(this).text() == '' + GradeArr[j] + '' }).attr('selected', 'selected').prop('checked', true);
                    }
                }
            }
            $('#Grade').multiselect('rebuild');
            // Refreshddl();
        }
    });
}
//function refreshddl() {
//    $("#grade").dropdownchecklist({
//        firstitemchecksall: true,
//        maxdropheight: 150,
//        height: 80,
//        width: 155
//    });
//}
/*------------------------------End Grade dll--------------------------*/
function gradeddl() {
    var campus = $("#Campus").val();
    $.getJSON("/Admission/CampusGradeddl/", { campus: campus },

function (modelData) {
    var select = $("#Grade");
    select.empty();
    select.append($('<option/>', { value: "", text: "Select Grade" }));
    $.each(modelData, function (index, itemData) {
        select.append($('<option/>', { value: itemData.gradcod, text: itemData.gradcod }));
    });
});
}
function isNumber(evt) {
    evt = (evt) ? evt : window.event;
    var charCode = (evt.which) ? evt.which : evt.keyCode;
    //alert(charCode);
    var txtMobileNum = $('#txtTestMsg').val();

    if (charCode > 31 && (charCode < 48 || charCode > 57)) {
        return false;
    }
    else if (txtMobileNum.length >= 10 && charCode != 8) {
        return false;
    }
    else { }
    return true;
}
function ShowMessage() {
    //temp1-- date1, temp2-- term, temp3 -- reason, temp4 -- date2, temp5 -- time, temp6 -- bulk content
    var e = document.getElementById('templateddl');
    var f = document.getElementById('tempterm');
    var str = e.options[e.selectedIndex].value;
    if (document.getElementById("tempdate1").value == "") {
        var n = str.replace("temp1", document.getElementById("tempdate").value);
    }
    else {
        var n = str.replace("temp1", document.getElementById("tempdate1").value);
    }
    n = n.replace("temp2", f.options[f.selectedIndex].value);
    n = n.replace("temp3", document.getElementById('reason').value);
    n = n.replace("temp4", document.getElementById('tempdate2').value);
    n = n.replace("temp5", document.getElementById('temptime').value);
    n = n.replace("temp6", document.getElementById('bulkcontent').value);
    document.getElementById("SMSMessage").value = n;
    document.getElementById("SMSText").innerHTML = "<b>Message  </b> </br>" + n;
}
</script>
@using (Html.BeginForm("BulkSMSRequest", "Communication", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="row">
        <div class="col-xs-12">
            <div class="col-sm-4" id="newMessage" >
                <div class="row">
                    <div class="col-xs-12 widget-container-col">
                        <div class="widget-box widget-color-CustomizeBlue">
                            <div class="widget-header widget-header-flat widget-header-small">
                                <div class="PanelHeader">
                                    <i class="ace-icon fa fa-pencil-square-o"></i>&nbsp;Add SMS Recipients
                                </div>
                                <div class="widget-toolbar">
                                    <a data-action="collapse" href="#"><i class="1 ace-icon fa fa-chevron-down fa-6x"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="widget-body">
                                <div class="widget-main no-padding">
                                    <div class="row" style="margin-top: 10px; margin-left: -17px; margin-bottom: 5px;">
                                        <div class="col-xs-12" style="padding-top: 15px;">
                                            <div class="col-sm-4">
                                                <label for="form-field-select-1">
                                                    <b>Send To</b></label>
                                            </div>
                                            <div class="col-xs-4">
                                                @Html.CheckBoxFor(model => model.Father, new { id = "smsFather" })
                                                <strong>Father</strong>
                                            </div>
                                            <div class="col-xs-4">
                                                @Html.CheckBoxFor(model => model.Mother, new { id = "smsMother" })
                                                <strong>Mother</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="margin-top: 10px; margin-left: -17px; margin-bottom: 5px;">
                                        <div class="col-xs-12" style="padding-top: 15px;">
                                            <div class="col-sm-4">
                                                <strong>Template</strong>
                                            </div>
                                            <div class="col-sm-8">
                                                @*@Html.TextAreaFor(model => model.Message, new { rows = 5, cols = 50, id = "smsMessage", @class = "CSSTextArea", @maxlength = "160" })*@
                                                @Html.DropDownListFor(model => model.SMSTemplateValue, new SelectList(ViewBag.smstemplate, "TemplateContent", "TemplateName"), "Select", new { id = "templateddl", @Class = "form-control select-sm" })
                                                @Html.HiddenFor(model => model.SMSTemplate, new { id = "templateddl1" })
                                                @Html.HiddenFor(m => m.SMSReqId)
                                                @Html.HiddenFor(m => m.Id)
                                                @Html.HiddenFor(m => m.Status)
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row" style="margin-top: 10px; margin-left: -17px; margin-bottom: 5px;">
                                        <div class="col-xs-12" style="padding-top: 15px;">
                                            <div class="row" id="from1" style="display: none">

                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        From Date
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @if (Model.Id != 0)
                                                        {
                                                            <input type="text" class="form-control from-date" value="@String.Format("{0:dd/MM/yyyy }", Model.FromDate)" style= "background-color: #EEEEEE" readonly="readonly"/>
                                                        }
                                                        else
                                                        {
                                                            
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.FromDate, new { id = "tempdate", @Class = "form-control txtPublishDate", @maxlength = "10" })

                                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                            </div>
                                                        }
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="row" id="from2" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        Date
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @if (Model.Id != 0)
                                                        {
                                                            <input type="text" class="form-control input-sm" value="@String.Format("{0:dd/MM/yyyy }", Model.TemplateDate)" style= "background-color: #EEEEEE" readonly="readonly"/>
                                                        }
                                                        else
                                                        {
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.TemplateDate, new { id = "tempdate1", @Class = "form-control txtPublishDate", @maxlength = "10" })

                                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                            </div>
                                                        }
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="row" id="Datediv2h" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        To Date
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @if (Model.Id != 0)
                                                        {
                                                            <input type="text" class="form-control input-sm" value="@String.Format("{0:dd/MM/yyyy }", Model.ToDate)" style= "background-color: #EEEEEE" readonly="readonly"/>
                                                        }
                                                        else
                                                        {
                                                            
                                                            <div class="input-group input-group-sm">
                                                                @Html.TextBoxFor(model => model.ToDate, new { id = "tempdate2", @Class = "form-control txtExpireDate", @maxlength = "10" })

                                                                <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                            </div>
                                                            
                                                        }
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="row" id="termdivh" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        Term
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @Html.DropDownListFor(model => model.TemplateTerm, new SelectList(new[]
                                          {
                                              new{Value="",Text="Select One"},
                                              new{Value="1st",Text="1st"},
                                              new{Value="2nd",Text="2nd"},
                                              new{Value="3rd",Text="3rd"},
                                              new{Value="4th",Text="4th"},
                                              new{Value="5th",Text="5th"},
                                              new{Value="6th",Text="6th"}
                                          },
                   "Value", "Text", ""), new { id = "tempterm", @Class = "form-control select-sm" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="Reasondivh" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        Reason
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @Html.TextBoxFor(model => model.Reason, new { id = "reason", @class = "form-control input-sm", @maxlength = "160", @placeholder = "Enter The Reason" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="timedivh" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-xs-4">
                                                        Time
                                                    </div>
                                                    <div class="col-xs-8">
                                                        @* <div class="input-group input-group-sm">
                                                            @Html.TextBoxFor(model => model.Time, new { id = "temptime", @maxlength = "10", @Class = "timepicker", @placeholder = "Select Time" })
                                                            <span class="input-group-addon"><i class="fa fa-clock-o"></i></span>
                                                        </div>*@

                                                        <div class="input-group clockpicker input-group-sm" data-align="top" data-autoclose="true">
                                                        @Html.TextBoxFor(model => model.Time, new { id = "temptime", @maxlength = "10", @Class = "form-control", @placeholder = "Select Time" })

                                                            <span class="input-group-addon"><i class="fa fa-clock-o"></i> </span>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="bulkcontentdivh" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-sm-2">
                                                        <label for="form-field-select-1">
                                                            <b>Content</b>
                                                        </label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="bulkcontentdiv" style="display: none">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-sm-12">
                                                        @Html.TextAreaFor(model => model.Info, new { id = "bulkcontent", @class = "form-control textarea", @maxlength = "160", @placeholder = "Enter The Description" })
                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                            <div class="row">
                                                <div class="col-xs-12">
                                                    <div class="col-sm-12">
                                                        <label id="SMSText">
                                                        </label>
                                                        @if (Model.Id != 0)
                                                        {
                                                            @Html.DisplayFor(model => model.Message)
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                            <br />
                                            <div class="row">
                                                <div class="col-sm-12">
                                                    <div class="col-sm-3">
                                                        <button type="submit" class="btn btn-success btn-block btn-sm" id="SMSbtn" value="Save"
                                                            onclick="return(validate3());">
                                                            <i class="ace-icon fa fa-save white"></i>&nbsp;Save
                                                        </button>
                                                    </div>
                                                    &nbsp;
                                                    <div class="col-sm-4">
                                                        <button type="button" class="btn btn-danger btn-block btn-sm" id="cancel" value="Cancel">
                                                            <i class="ace-icon fa fa-times-circle white"></i>&nbsp;Cancel
                                                        </button>
                                                    </div>
                                                    &nbsp;
                                                    <div class="col-sm-4">
                                                        <button type="button" class="btn btn-success btn-block btn-sm" id="sendBulkSMS" value="Send Bulk SMS">
                                                            <i class="fa fa-paper-plane white"></i>&nbsp;Send Bulk SMS
                                                        </button>
                                                    </div>
                                                    &nbsp;
                                                    @Html.HiddenFor(model => model.Message, new { id = "SMSMessage" })
                                                </div>
                                            </div>
                                            <div class="row" id="testMsg">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-sm-12">
                                                        <label for="form-field-select-1">
                                                            <b>Test Composed Message</b>
                                                        </label>
                                                    </div>
                                                </div>


                                                <div class="col-xs-12">
                                                    <div class="col-sm-8">
                                                        <input type="text" value="" id="txtTestMsg" class="form-control input-sm" name=""
                                                            onkeypress="return isNumber(event)" placeholder="Enter test Mobile Number" />
                                                    </div>
                                                    &nbsp;
                                                    <div class="col-sm-3">
                                                        <button type="button" class="btn btn-mini btn-primary" id="tstSMS" value="" onclick="return(validatenumberonly());">
                                                            <i class="fa fa-lightbulb-o" style="vertical-align: middle"></i>&nbsp;Test SMS
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" id="SMSCredit">
                                                <br />
                                                <div class="col-xs-12">
                                                    <div class="col-sm-12">
                                                        <label for="form-field-select-1">
                                                            <b>Credit Availabe Message</b>
                                                        </label>
                                                    </div>

                                                    <div class="col-sm-12">
                                                        <div class="col-sm-5" style="margin-left: -7px;">
                                                            <button type="button" class="btn btn-mini btn-purple" id="SMSCreditbtn" value="">
                                                                <i class="fa fa-money" style="vertical-align: middle"></i>&nbsp;Show SMS Credit
                                                            </button>
                                                        </div>
                                                        <div class="col-sm-7" style="margin-left: 7px;">
                                                            <label for="form-field-select-1" id="SMSCreditShow">
                                                            </label>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-8" id="SMSRecipients">
                <div class="row">
                    <div class="col-xs-12 widget-container-col">
                        <div class="widget-box widget-color-CustomizeBlue">
                            <div class="widget-header widget-header-flat widget-header-small">
                                <div class="PanelHeader">
                                    <i class="ace-icon fa fa-search"></i>&nbsp;Search Pannel
                                </div>
                                <div class="widget-toolbar">
                                    <a data-action="collapse" href="#"><i class="1 ace-icon fa fa-chevron-down fa-6x"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="widget-body">
                                <div class="widget-main no-padding">
                                    <div class="row" style="margin-top: 10px; margin-left: 3px; margin-bottom: 5px;">
                                        <div class="col-xs-12">
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>Campus</b></label>
                                                @Html.DropDownListFor(m => m.Campus, new SelectList(Enumerable.Empty<SelectListItem>()), new { @Class = "form-control input-sm" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>Grade</b></label>
                                                @Html.DropDownList("Grade", new MultiSelectList(Enumerable.Empty<SelectListItem>()), new { @multiple = "multiple", @Class = "multiselect" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>Section</b></label>
                                                @Html.DropDownList("Section", new MultiSelectList(Enumerable.Empty<SelectListItem>()), new { @multiple = "multiple", @Class = "multiselect" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>AdmissionStatus</b></label>
                                                @Html.DropDownListFor(m => m.AdmissionStatus, new SelectList(new[] {
                                  new{Value="",Text="Select One"},
                                  new{Value="New Enquiry",Text="New Enquiry"},
                                  new{Value="New Registration",Text="New Registration"},
                                  new{Value="Registered",Text="Registered"},
                                  new{Value="Discontinued",Text="Discontinued"},
                                  new{Value="Inactive",Text="Inactive"},
                                  new{Value="Sent For Clearance",Text="Sent For Clearance"},
                                  new{Value="Sent For Approval",Text="Sent For Approval"},
                                  new{Value="On Hold",Text="On Hold"},
                                  new{Value="Declined",Text="Declined"},
                                  new{Value="Not Interested",Text="Not Interested"},
                                  new{Value="Not Joined",Text="Not Joined"},
                                  new{Value="Call For Interview",Text="Call For Interview"},
                                  new{Value="Joining Next Year",Text="Joining Next Year"},
                                  new{Value="Waiting For Reply",Text="Waiting For Reply"},
                                  new{Value="Call For Interview",Text="Call For Interview"}   
                                 }, "Value", "Text", ""), new { id = "admstats", @Class = "form-control input-sm" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>StudentName</b></label>
                                                @Html.TextBoxFor(m => m.StudentName, new { id = "appname", @maxlength = "30", @Class = "form-control input-sm" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>Id Number</b></label>
                                                @Html.TextBoxFor(model => Model.NewId, new { id = "idnumber", @maxlength = "30", @Class = "form-control input-sm" })
                                            </div>
                                        </div>
                                        <div class="col-xs-12">
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>IsHosteller</b></label>
                                                @Html.DropDownListFor(model => Model.IsHosteller, new SelectList(new[] {
                                  new{Value="",Text="Select One"},
                                              new{Value="True",Text="Yes"},
                                              new{Value="False",Text="No"}                           
                                 }, "Value", "Text", ""), new { id = "ishosteller", @Class = "form-control select-sm" })
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>App From Date</b></label>


                                                <div class="input-group input-group-sm">
                                                    @Html.TextBox("txtAppliedFrmDate", "", new { @Class = "form-control from_date", @maxlength = "10", })
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>
                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>AppliedToDate</b></label>
                                                <div class="input-group input-group-sm">

                                                    @Html.TextBox("txtAppliedToDate", "", new { @Class = "form-control to_date", @maxlength = "10" })
                                                    <span class="input-group-addon"><i class="ace-icon fa fa-calendar"></i></span>
                                                </div>

                                            </div>
                                            <div class="col-sm-2">
                                                <label for="form-field-select-1">
                                                    <b>Route No</b></label>
                                                @Html.DropDownListFor(m => m.VanNo, new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { id = "vanno", @Class = "form-control input-sm" })
                                            </div>
                                            <div class="col-sm-2">
                                                <br />
                                                <button type="button" class="btn btn-success btn-block btn-sm" id="search">
                                                    <i class="ace-icon fa fa-search white"></i>Search
                                                </button>
                                            </div>
                                            <div class="col-sm-2">
                                                <br />
                                                <button type="button" class="btn btn-danger btn-block btn-sm" id="reset">
                                                    <i class="ace-icon fa fa-undo white"></i>Reset
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="space-2">
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <table id="BulkSMSGrid">
                        </table>
                        <div id="BulkSMSGridPager">
                        </div>
                    </div>
                </div>
                <div class="space-2"></div>
                <div class="row">

                    <div class="col-xs-12">
                        <div class="col-sm-2">
                            <button type="button" class="btn btn-mini btn-success" id="saveList" value="Save List">
                                <i class="fa fa-file-o" style="vertical-align: middle"></i>&nbsp;Save List
                            </button>
                        </div>
                        &nbsp;
                        <div class="col-sm-2">
                            <button type="button" class="btn btn-mini btn-danger" id="clearList" value="Clear List">
                                <i class="fa fa-trash-o" style="vertical-align: middle"></i>&nbsp;Clear List
                            </button>
                        </div>
                        &nbsp;
                        <div class="col-sm-4">
                            <button type="button" class="btn btn-mini btn-primary" id="SelectedSend">
                                <i class="fa fa-share" style="vertical-align: middle"></i>&nbsp;Send Selected
                            </button>
                        </div>
                        &nbsp;
                        <div class="col-sm-3">
                            <button type="button" class="btn btn-mini btn-warning" id="Suspended">
                                <i class="fa fa-ban" style="vertical-align: middle"></i>&nbsp;Suspend
                            </button>
                        </div>
                    </div>
                </div>
                <script type="text/javascript">
                    var $path_base = ".."; //in Ace demo this will be used for editurl parameter
                </script>
                <!-- PAGE CONTENT ENDS -->
            </div>
        </div>
    </div>


}
<div id="divSuspendReson">
</div>
<div id="dvLoading">
</div>
<script src="../../assets/js/AceJQMsg.js" type="text/javascript"></script>
<script src="../../assets/js/bootstrap-multiselect.js" type="text/javascript"></script>
<link href="../../assets/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<link href="../../assets/css/bootstrap-clockpicker.min.css" rel="stylesheet" />
<script src="../../assets/js/bootstrap-clockpicker.min.js"></script>
