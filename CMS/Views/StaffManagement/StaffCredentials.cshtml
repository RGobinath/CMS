@{
    ViewBag.Title = "StaffCredentials";
    Layout = "~/Views/Shared/NewAcePartialViewMaster.cshtml";
    string valString = ViewBag.CertiFy;
}
@Html.Hidden("hiddenPreRegNum", (object)ViewBag.PreRegNum)
@Html.Hidden("hiddenCertify", (object)ViewBag.CertiFy)
<script src="../../assets/js/AceJQMsg.js" type="text/javascript"></script>
@{
    switch (valString)
    {
        case "AddressProofLetter":
            break;
        case "BonafideCertificate":
        case "NOCLetter":
            {
    <table>
        <tr>
            <td>
                Course
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" id="txtCourse" onkeypress="return lettersOnly(event)" />
            </td>
        </tr>
    </table>
            }
            break;
        case "RedesignationLetter":
            {
    <table>
        <tr>
            <td>
                Date
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" class="form-control to_date" style="width: 150px;" id="txtDateofRedsn"
                    readonly="readonly" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                Current Desgination
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" id="txtCurDesg" onkeypress="return lettersOnly(event)" />
            </td>
        </tr>
    </table>
            }
            break;
        case "RelievingLSCertificate":
            {
    <table>
        <tr>
            <td>
                Letter Date
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" class="form-control to_date" id="txtLetterdate" readonly="readonly" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                Date Of Releaving
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" class="form-control to_date" id="txtDateofRelv" readonly="readonly" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                <label for="form-field-select-1">
                    Type of Employment</label>
            </td>
            <td>
                :
            </td>
            <td>
                @Html.DropDownList("ddlRSCertfy", new SelectList(new[] {
                                  new{ Value="", Text="Select One"},
                                              new{Value="PART TIME",Text="PART TIME"},
                                              new{Value="FULL TIME",Text="FULL TIME"}
                                 }, "Value", "Text", ""), new { @style = "width:200px;", @Class = "form-control select-sm" })
            </td>
        </tr>
    </table>
            }
            break;
        case "SalaryAppraisalLetter":
            {
    <table>
        <tr>
            <td>
                <p>
                    Amount:</p>
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" id="txtAmountSalryApr" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                Date
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" class="form-control to_date" id="txtDateofSalryApr" readonly="readonly" />
            </td>
        </tr>
    </table>
            }
            break;
        case "SalaryCertificate":
            {
    <table>
        <tr>
            <td>
                <p>
                    Amount:</p>
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" id="txtSalaryCerAmount" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                <p>
                    PF Amount:</p>
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" id="txtPFAmount" />
            </td>
        </tr>
    </table>
            }
            break;
        case "TransferLetter":
            {
    <table>
        <tr>
            <td>
                Date
            </td>
            <td>
                :
            </td>
            <td>
                <input type="text" class="form-control to_date" id="txtDateofTrsfr" readonly="readonly" />
            </td>
        </tr>
        <tr>
            <td colspan="3">
                <br />
            </td>
        </tr>
        <tr>
            <td>
                Campus
            </td>
            <td>
                :
            </td>
            <td>
                @Html.DropDownList("ddlCampus", new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { @style = "width:200px;", @Class = "form-control select-sm" })
            </td>
        </tr>
    </table>
            }
            break;
        default:
            break;
    }
}
<br />
<button class="btn btn-primary btn-info btn-sm" id="SubButton"  type="submit">
                                            <i class="ace-icon fa fa-save white"></i>Save
                                        </button>

@*<input type="submit" id="SubButton" value="Save" />*@
<script>



    // JQUERY ".Class" SELECTOR.
    $(document).ready(function () {
        $('#SubButton').click(function () {
            //$('#DivStudentSearch').dialog('close');
            //alert('button is clicked');
        });

        $("#txtAmount").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#txtAmountSalryApr").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


        $("#txtSalaryCerAmount").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("#txtPFAmount").keydown(function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
            // Allow: Ctrl+A
            (e.keyCode == 65 && e.ctrlKey === true) ||
            // Allow: home, end, left, right, down, up
            (e.keyCode >= 35 && e.keyCode <= 40)) {
                // let it happen, don't do anything
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });


        $.getJSON("/Base/FillBranchCode",
    function (fillig) {
        var ddlcam = $("#ddlCampus");
        ddlcam.empty();
        ddlcam.append($('<option/>',
    {
        value: "",
        text: "Select One"

    }));

        $.each(fillig, function (index, itemdata) {
            ddlcam.append($('<option/>',
    {
        value: itemdata.Value,
        text: itemdata.Text
    }));
        });
    });



        $('#SubButton').click(function () {


            switch ('@ViewBag.CertiFy') {
                case "AddressProofLetter":
                    break;
                case "BonafideCertificate":
                case "NOCLetter":
                    {
                        if ($('#txtCourse').val() == '') {
                            //ErrMsg('Please Enter Value'); return false;
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                case "RedesignationLetter":
                    {
                        if (($('#txtDateofRedsn').val() == '') || $('#txtCurDesg').val() == '') {

                            // ErrMsg('Please Enter Value'); return false; 
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                case "RelievingLSCertificate":
                    {
                        if (($('#txtLetterdate').val() == '') || $('#txtDateofRelv').val() == '' || $('#ddlRSCertfy').val() == '') {

                            //ErrMsg('Please Enter Value'); return false; 
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                case "SalaryAppraisalLetter":
                    {
                        if (($('#txtAmountSalryApr').val() == '') || $('#txtDateofSalryApr').val() == '') {

                            //ErrMsg('Please Enter Value'); return false;
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                case "SalaryCertificate":
                    {
                        if (($('#txtSalaryCerAmount').val() == '') || $('#txtPFAmount').val() == '') {

                            //ErrMsg('Please Enter Value'); return false; 
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                case "TransferLetter":
                    {
                        if (($('#txtDateofTrsfr').val() == '') || $('#ddlCampus').val() == '') {

                            //ErrMsg('Please Enter Value'); return false; 
                            alert('Please Enter Value'); return false;
                        }
                    }
                    break;
                default:
                    {
                        return false;
                        break;
                    }
                    break;
            }
            debugger;
            window.location.href = '/StaffManagement/GenerateCertificate?staffId=' + $('#hiddenPreRegNum').val() + '&certFy=' + $('#hiddenCertify').val() + '&Course=' + $('#txtCourse').val() + '&DateofRedsn=' + $('#txtDateofRedsn').val() + '&CurDesg=' + $('#txtCurDesg').val() + '&Letterdate=' + $('#txtLetterdate').val() + '&DateofRelv=' + $('#txtDateofRelv').val() + '&RSCertfy=' + $('#ddlRSCertfy').val() + '&AmountSalryApr=' + $('#txtAmountSalryApr').val() + '&DateofSalryApr=' + $('#txtDateofSalryApr').val() + '&SalaryCerAmount=' + $('#txtSalaryCerAmount').val() + '&AmtInWords=' + inWords($('#txtSalaryCerAmount').val()) + '&PFAmount=' + $('#txtPFAmount').val() + '&DateofTrsfr=' + $('#txtDateofTrsfr').val() + '&Campus=' + $('#ddlCampus').val()
        });

    });

    // Allow only Alphabates and White Space for Name
    function lettersOnly(evt) {
        evt = (evt) ? evt : event;
        var charCode = (evt.charCode) ? evt.charCode : ((evt.keyCode) ? evt.keyCode :
          ((evt.which) ? evt.which : 0));
        if (charCode == 32)
            return true;
        if (charCode > 31 && (charCode < 65 || charCode > 90) &&
          (charCode < 97 || charCode > 122)) {
            return false;
        }
        else
            return true;
    }



    var a = ['', 'one ', 'two ', 'three ', 'four ', 'five ', 'six ', 'seven ', 'eight ', 'nine ', 'ten ', 'eleven ', 'twelve ', 'thirteen ', 'fourteen ', 'fifteen ', 'sixteen ', 'seventeen ', 'eighteen ', 'nineteen '];
    var b = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
    // alert(inWords(1231253));
    function inWords(num) {
        debugger;
        var str = '';
        if (num == undefined) {
            return str;
        }
        else {
            if ((num = num.toString()).length > 9) return 'overflow';
            n = ('000000000' + num).substr(-9).match(/^(\d{2})(\d{2})(\d{2})(\d{1})(\d{2})$/);
            if (!n) return;
            str += (n[1] != 0) ? (a[Number(n[1])] || b[n[1][0]] + ' ' + a[n[1][1]]) + 'crore ' : '';
            str += (n[2] != 0) ? (a[Number(n[2])] || b[n[2][0]] + ' ' + a[n[2][1]]) + 'lakh ' : '';
            str += (n[3] != 0) ? (a[Number(n[3])] || b[n[3][0]] + ' ' + a[n[3][1]]) + 'thousand ' : '';
            str += (n[4] != 0) ? (a[Number(n[4])] || b[n[4][0]] + ' ' + a[n[4][1]]) + 'hundred ' : '';
            str += (n[5] != 0) ? ((str != '') ? 'and ' : '') + (a[Number(n[5])] || b[n[5][0]] + ' ' + a[n[5][1]]) + 'only ' : '';
            return str;
        }
    }

    
</script>
