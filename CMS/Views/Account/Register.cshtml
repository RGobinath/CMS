@model TIPS.Entities.User
@{
    ViewBag.Title = "Log On";
    Layout = "~/Views/Shared/Account_Master.cshtml"; 
}
@using (Html.BeginForm("Register", "Account"))
{
    <body class="login-layout light-login">
        <div class="main-container">
            <div class="main-content">
                <div class="row">
                    <div class="col-sm-10 col-sm-offset-1">
                        <div class="login-container">
                            <div class="space-6">
                            </div>
                            <div class="position-relative">
                                <div id="signup-box" class="signup-box visible widget-box no-border">
                                    <div class="widget-body">
                                        <div class="widget-main">
                                            <div class="clearfix">
                                                <div>
                                                    <img src="../../Images/logonace.jpg" style="float: left; height: 57px; width: 113px" />
                                                </div>
                                                <div>
                                                    <img src="../../Images/tips.gif" style="float: right; height: 57px; width: 113px" />
                                                </div>
                                            </div>
                                            <h4 class="header green lighter bigger">
                                                <i class="ace-icon fa fa-users blue"></i>New User Registration
                                            </h4>
                                            <div class="space-6">
                                            </div>
                                            <p>Enter your details to begin:</p>
                                            <form>
                                            <fieldset>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.TextBoxFor(m => m.UserName, new { @Class = "form-control", placeholder = "UserId" })
                                                        @Html.ValidationMessageFor(m => m.UserName)
                                                        <i class="ace-icon fa fa-user"></i></span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.TextBoxFor(m => m.UserId, new { @Class = "form-control", placeholder = "Username" })
                                                        @Html.ValidationMessageFor(m => m.UserId)
                                                        @Html.Hidden("SuccessUserCreation", "", new { id = "SuccessUserCreation", @Value = TempData["SuccessUserCreation"] })
                                                        <i class="ace-icon fa fa-users"></i></span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.DropDownListFor(model => model.Campus, new SelectList(Enumerable.Empty<SelectListItem>()), "Select Campus", new { id = "ddlCampus", @Class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.Campus)
                                                        </span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.DropDownListFor(model => model.UserType, new SelectList(Enumerable.Empty<SelectListItem>()), "Select User Type", new { id = "ddlUserType", @Class = "form-control" })
                                                        @Html.ValidationMessageFor(m => m.UserId)
                                                        </span>
                                                </label>
                                                <label class="block clearfix" id="empid">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.TextBoxFor(m => m.EmployeeId, new { id = "txtEmployeeId", @Class = "form-control", placeholder = "Employee ID" })
                                                        @Html.ValidationMessageFor(m => m.EmployeeId)
                                                        <i class="ace-icon fa fa-gavel"></i></span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.PasswordFor(m => m.Password, new { @Class = "form-control", placeholder = "Password" })
                                                        @Html.ValidationMessageFor(m => m.Password)
                                                        <i class="ace-icon fa fa-lock"></i></span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.PasswordFor(m => m.ConfirmPassword, new { @Class = "form-control", placeholder = "Repeat password" })
                                                        @Html.ValidationMessageFor(m => m.ConfirmPassword)
                                                        <i class="ace-icon fa fa-retweet"></i></span>
                                                </label>
                                                <label class="block clearfix">
                                                    <span class="block input-icon input-icon-right">
                                                        @Html.TextBoxFor(m => m.EmailId, new { @Class = "form-control", placeholder = "Email" })
                                                        @Html.ValidationMessageFor(m => m.EmailId)
                                                        <i class="ace-icon fa fa-envelope"></i></span>
                                                </label>
                                                <label class="block">
                                                    <input type="checkbox" class="ace" />
                                                    <span class="lbl">I accept the <a href="#">User Agreement</a> </span>
                                                </label>
                                                <div class="space-18"></div>
                                                <div class="clearfix">
                                                    <button type="reset" class="width-30 pull-left btn btn-sm">
                                                        <i class="ace-icon fa fa-refresh"></i><span class="bigger-110">Reset</span>
                                                    </button>
                                                    <button type="submit" class="width-65 pull-right btn btn-sm btn-success">
                                                        <span class="bigger-110">Register</span> <i class="ace-icon fa fa-arrow-right icon-on-right">
                                                        </i>
                                                    </button>
                                                </div>
                                            </fieldset>
                                            </form>
                                        </div>
                                        <div class="toolbar center">
                                            <a href="/Account/Login" class="back-to-login-link"><i class="ace-icon fa fa-arrow-left">
                                            </i>Back to login</a>
                                        </div>
                                    </div>
                                    <!-- /.widget-body -->
                                </div>
                                <!-- /.signup-box -->
                            </div>
                        </div>
                    </div>
                    <!-- /.col -->
                </div>
                <!-- /.row -->
            </div>
            <!-- /.main-content -->
        </div>
        <!-- /.main-container -->
        <!-- basic scripts -->
        <!--[if !IE]> -->
        <script type="text/javascript">
            window.jQuery || document.write("<script src='../assets/js/jquery.min.js'>" + "<" + "/script>");
        </script>
        <!-- <![endif]-->
        <script type="text/javascript">
            if ('ontouchstart' in document.documentElement) document.write("<script src='../assets/js/jquery.mobile.custom.min.js'>" + "<" + "/script>");
        </script>
        <!-- inline scripts related to this page -->
        <script type="text/javascript">
            jQuery(function ($) {
                $(document).on('click', '.toolbar a[data-target]', function (e) {
                    e.preventDefault();
                    var target = $(this).data('target');
                    $('.widget-box.visible').removeClass('visible'); //hide others
                    $(target).addClass('visible'); //show target
                });
                $('#empid').hide();
                var error = "@ViewBag.Error";
                if (error != "") {
                    ErrMsg(error);
                }
                $.getJSON("/Base/FillAllBranchCode",
             function (fillig) {
                 var ddlcam = $("#ddlCampus");
                 ddlcam.empty();
                 ddlcam.append($('<option/>', { value: "", text: "Select Campus" }));
                 $.each(fillig, function (index, itemdata) {
                     ddlcam.append($('<option/>', { value: itemdata.Value, text: itemdata.Text }));
                 });
             });
                $.getJSON("/Account/FillUserType",
                 function (fillusertype) {
                     var ddlusrtyp = $("#ddlUserType");
                     ddlusrtyp.empty();
                     ddlusrtyp.append($('<option/>', { value: "", text: "Select User Type" }));
                     $.each(fillusertype, function (index, itemdata) {
                         ddlusrtyp.append($('<option/>', { value: itemdata.Value, text: itemdata.Text }));
                     });
                 });
                
                $('#ddlUserType').change(function () {
                    var UsrTpe = $('#ddlUserType').val();
                    if (UsrTpe == 'Staff') {
                        $('#empid').show();
                    } else { $('#empid').hide(); }
                });
                $('#btnSubmit').click(function () {
                    var userid = $('#UserId').val();
                    var usertyp = $('#ddlUserType').val();
                    var userName = $('#UserName').val();
                    var sEmail = $('#EmailId').val();
                    var pass = $('#Password').val();
                    var confirmpass = $('#ConfirmPassword').val();
                    var campus = $('#ddlCampus').val();
                    var empid = $('#txtEmployeeId').val();
                    if ($.trim(userid).length == 0) {
                        ErrMsg('UserId is Mandatory.');
                        return false;
                    }
                    if (userName == "") {
                        ErrMsg('User Name is Mandatory.');
                        return false;
                    }
                    if (campus == "") {
                        ErrMsg('Campus is Mandatory.');
                        return false;
                    }
                    if ($.trim(usertyp).length == 0) {
                        ErrMsg('User Type is Mandatory.');
                        return false;
                    }
                    if (usertyp == 'Staff' && empid == "") {
                        ErrMsg('Employee Id is Must.');
                        return false;
                    }
                    if ($.trim(pass).length < 6) {
                        ErrMsg('Password should be minimum of 6 characters.');
                        return false;
                    }
                    if (pass != confirmpass) {
                        ErrMsg("Password and Confirm Password doesn't match.");
                        return false;
                    }
                    if (sEmail == "") {
                        ErrMsg('Email-Id is required.');
                        return false;
                    }
                });

                $("#btnReset").click(function () {
                    window.location.href = '@Url.Action("CustomRegister", "Account")';
                });
                if ($("#SuccessUserCreation").val() == 1) {
                    InfoMsg("User Created Successfully.\n Try to login with registered UserId", function () { $("#SuccessUserCreation").val(""); window.location.href = '@Url.Action("CustomRegister", "Account")'; });
                }
            });
            
        </script>
    </body>
}