@model TIPS.Entities.AdmissionEntities.StudentTemplate
@{
    ViewBag.Title = "Individual Notification";
    Layout = "~/Views/Shared/NewMaster.cshtml";
}
<h3>
    Individual Notification</h3>
<script src="../../Scripts/Notification/noty/jquery.noty.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/noty/bottomRight.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/noty/topCenter.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/noty/top.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/noty/topRight.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/noty/default.js" type="text/javascript"></script>
<script src="../../Scripts/Notification/nicEdit.js" type="text/javascript"></script>
<script type="text/javascript" src="@Url.Content("~/Scripts/ui.dropdownchecklist-1.4-min.js")" ></script>
<script type="text/javascript">
    bkLib.onDomLoaded(function () {

        nicEditors.allTextAreas({ maxHeight: 100, fullPanel: true });

    });
   
</script>
<script type="text/javascript">

    var id = ""; var grade = ""; var acadyr = ""; var appname = ""; var section = ""; var ishosteller = ""; var idnum = ""; var preregno = ""; var flag = ""; var reset = "";
    var admstat = ""; var feestructyr = ""; var appno = ""; var selNewIds = ""; var MainrowData = []; var MainrowData1 = ""; var MainrowData2 = ""; var MainrowDataPRN = []; var j = 0;

    function generate(layout, data1) {
        // alert(data1);
        var n = noty({
            text: "Following Pre-Reg Nos are selected: " + data1,
            type: 'information',
            dismissQueue: true,
            layout: layout,
            theme: 'defaultTheme',
            timeout: 1500,
            header: false
        });
        console.log('html: ' + n.options.id);
    }
    function generateAll() {
        generate('top');
    }
    function runEffect() {
        // get effect type from
        var selectedEffect = $("#effectTypes").val();
        // most effect types need no options passed by default
        var options = {};
        // some effects have required parameters
        if (selectedEffect === "scale") {
            options = { percent: 100 };
        } else if (selectedEffect === "size") {
            options = { to: { width: 280, height: 185} };
        }
        // run the effect
        $("#effect").show(selectedEffect, options, 500, callback);
    };
    //callback function to bring a hidden box back
    function callback() {
        setTimeout(function () {
            $("#effect:visible").removeAttr("style").fadeOut();
        }, 1000);
    };

    $(document).ready(function () {

        gradeddl();
        sectionddl();
        $.getJSON("/Notify/FillCampusList",
     function (fillbc) {
         var ddlbc = $("#ddlcampus");
         ddlbc.empty();
         ddlbc.append($('<option/>', { value: "", text: "Select One" }));
         $.each(fillbc, function (index, itemdata) {
             if (itemdata.Text == '@Model.Campus') {
                 ddlbc.append("<option value='" + itemdata.Value + "' selected='selected'>" + itemdata.Text + "</option>");
             }
             else {
                 ddlbc.append($('<option/>', { value: itemdata.Value, text: itemdata.Text }));
             }
         });
     });
        var cmps = document.getElementById("ddlcampus");
        // alert(a.length());
        for (i = 0; i < cmps.options.length; i++) {
            if (cmps.options[i].text == '@Session["cmpnm"]') {
                cmps.selectedIndex = i;
            }
        }
        //        var grd = document.getElementById("ddlgrade");
        //        for (j = 0; j < grd.options.length; j++) {
        //            if (grd.options[j].text == '@Session["grd"]') {
        //                grd.selectedIndex = j;
        //            }
        //        }
        //        var sct = document.getElementById("ddlsection");
        //        for (k = 0; k < sct.options.length; k++) {
        //            if (sct.options[k].text == '@Session["sect"]') {
        //                sct.selectedIndex = k;
        //            }
        //        }
        var ishost = document.getElementById("ishosteller");
        for (m = 0; m < ishost.options.length; m++) {
            var hostlr = "";
            if ('@Session["hostlr"]' == "Yes") {
                hostlr = "Yes";
            }
            else if ('@Session["hostlr"]' == "No") {
                hostlr = "No";
            }

            if (ishost.options[m].text == hostlr) {
                ishost.selectedIndex = m;
            }
        }

        if ('@Session["apnam"]' != "") {
            document.getElementById('appname').value = '@Session["apnam"]';
        }
        if ('@Session["idnum"]' != "") {
            document.getElementById('idnumber').value = '@Session["idnum"]';
        }


        function loadgrid() {

            jQuery("#StudentManagementList").jqGrid({
                mtype: 'GET',
                url: '/Notify/AdmissionManagementListJqGrid',
                postData: { flag1: 'Register', Id: id, grade: grade, section: section, acadyr: acadyr, appname: appname, idnum: idnum, admstat: admstat, appno: '', preregnumber: preregno, ishosteller: ishosteller, flag: flag, reset: reset, stdntmgmt: 'yes' },
                datatype: 'json',
                colNames: ['Application No', 'Pre-Reg No', 'Name of Applicant', 'Grade', 'Section', 'Campus', 'Fee Structure Year', 'Admission Status', 'Student Id', 'Academic Year', 'Applied Date'],
                colModel: [

              { name: 'ApplicationNo', index: 'ApplicationNo', width: 60, align: 'left', sortable: false },
              { name: 'PreRegNo', index: 'PreRegNo', width: 30, align: 'left', sortable: false },
              { name: 'Name', index: 'Name', width: 100, align: 'left', sortable: false },
              { name: 'Grade', index: 'Grade', width: 30, align: 'left', sortable: false },
              { name: 'Section', index: 'Section', width: 30, align: 'left', sortable: false },
              { name: 'Campus', index: 'Campus', width: 60, align: 'left', sortable: false },
              { name: 'FeeStructYear', index: 'FeeStructYear', width: 30, align: 'left', sortable: false },
              { name: 'AdmissionStatus', index: 'AdmissionStatus', width: 60, align: 'left', sortable: false },
              { name: 'NewId', index: 'NewId', width: 60, align: 'left', sortable: false },
              { name: 'AcademicYear', index: 'AcademicYear', width: 60, align: 'left', sortable: false },
              { name: 'AppliedDate', index: 'AppliedDate', width: 60, align: 'left', sortable: false}],
                pager: '#StudentManagementListPager',
                rowNum: '10',
                rowList: [5, 10, 20, 50, 100, 150, 200],
                sortname: 'Id',
                sortorder: 'desc',
                viewrecords: true,
                multiselect: true,
                height: '220',
                width: '1225',
                caption: 'Students List',

                onPaging: function (pgButton) {
                    var GridIdList = $("#StudentManagementList").jqGrid('getGridParam', 'selarrrow');
                    if (GridIdList.length > 0) {
                        for (i = 0; i < GridIdList.length; i++) {
                            MainrowData[i] = $("#StudentManagementList").jqGrid('getRowData', GridIdList[i]);
                            if (MainrowData1 == "") {
                                MainrowData1 = MainrowData[i].NewId;
                                MainrowData2 = MainrowData[i].PreRegNo;
                            }
                            else {
                                MainrowData1 = MainrowData1 + "," + MainrowData[i].NewId;
                                MainrowData2 = MainrowData2 + "," + MainrowData[i].PreRegNo;
                            }
                        }
                    }
                    if (MainrowData1 != "") {
                        generate('bottomRight', MainrowData1);
                    }
                }
            });
        }
        $("#ddlcampus").change(function () {
            gradeddl();
        });


        window.onload = loadgrid();
        $("#Search").click(function () {
            debugger;
            var GridIdList = $("#StudentManagementList").jqGrid('getGridParam', 'selarrrow');
            var rowData = [];
            var rowData1 = [];
            if (GridIdList.length > 0) {
                for (i = 0; i < GridIdList.length; i++) {
                    rowData[i] = $("#StudentManagementList").jqGrid('getRowData', GridIdList[i]);
                    rowData1[i] = rowData[i].PreRegNo;
                    if (MainrowData1 != "") {
                        MainrowData1 = MainrowData1 + ',' + rowData1[i];
                        //MainrowData2 = MainrowData2 + ',' + rowData1[i].PreRegNo;
                    }
                    else {
                        MainrowData1 = rowData1[i];
                    }
                }
            }

            $("#StudentManagementList").GridUnload();
            var e = document.getElementById("ddlcampus");
            id = e.options[e.selectedIndex].value;
            grade = $("#ddlgrade").val();
            section = $("#ddlsection").val();
            if (grade != "" & grade != null) {
                grade = $('#ddlgrade').val().toString();
            }
            if (section != "" & section != null) {
                section = $('#ddlsection').val().toString();
            }
            var i = document.getElementById("ishosteller");
            ishosteller = i.options[i.selectedIndex].value;
            var o = document.getElementById("academicyear");
            acadyr = o.options[o.selectedIndex].value;
            appname = document.getElementById('appname').value;
            idnum = document.getElementById('idnumber').value;
            reset = "no";
            loadgrid();
        });
        $("#reset").click(function () {
            $("#StudentManagementList").GridUnload();
            id = "";
            grade = "";
            acadyr = "";
            appname = "";
            section = "";
            reset = "yes";
            appno = "";
            preregno = "";
            flag = "";
            var e = document.getElementById('ddlcampus');
            e.options[0].selected = true; // "Select";
            // alert(e.options[e.selectedIndex].value);
            grade = "";
            section = "";
            var i = document.getElementById("ishosteller");
            i.options[0].selected = true; // "Select";
            gradeddl();
            sectionddl();
            loadgrid();
            document.getElementById('appname').value = "";
            //document.getElementById('dateapplied').value = "";
            document.getElementById('idnumber').value = "";
            //   LoadSetGridParam($("#AdmissionManagementList"), '/Admission/AdmissionManagementListJqGrid/');

        });

        $("#BulkEmail").click(function () {
            var e = document.getElementById("ddlcampus");
            var campus = e.options[e.selectedIndex].value;
            LoadPopupDynamicaly1("/Admission/CampusEmail", $('#EmailDiv1'),
                            function () {
                                $.ajax({
                                    url: '/Admission/CampusEmail',
                                    type: 'GET',
                                    dataType: 'json',
                                    data: { campusname: campus },
                                    traditional: true
                                });
                            });
        });
        function LoadPopupDynamicaly1(dynURL, ModalId, loadCalBack, onSelcalbck, width) {
            //  alert('here');
            if (width == undefined) { width = 650; }
            if (ModalId.html().length == 0) {
                $.ajax({
                    url: dynURL,
                    type: 'GET',
                    // type: 'POST',
                    async: false,
                    dataType: 'html', // <-- to expect an html response
                    //    data: { ActivityId: rowData1 },
                    success: function (data) {
                        ModalId.dialog({
                            height: 450,
                            width: width,
                            modal: true,
                            //title: 'Email',
                            buttons: {}
                        });
                        ModalId.html(data);
                    }
                });
            }
            clbPupGrdSel = onSelcalbck;
            ModalId.dialog('open');
            CallBackFunction(loadCalBack);
        }

        function LoadPopupDynamicaly2(dynURL, ModalId, loadCalBack, onSelcalbck, width) {
            //  alert('here');
            if (width == undefined) { width = 670; }
            if (ModalId.html().length == 0) {
                $.ajax({
                    url: dynURL,
                    type: 'GET',
                    // type: 'POST',
                    async: false,
                    dataType: 'html', // <-- to expect an html response
                    //    data: { ActivityId: rowData1 },
                    success: function (data) {
                        ModalId.dialog({
                            height: 500,
                            width: width,
                            modal: true,
                            //title: 'Email',
                            buttons: {}
                        });
                        ModalId.html(data);
                    }
                });
            }
            clbPupGrdSel = onSelcalbck;
            ModalId.dialog('open');
            CallBackFunction(loadCalBack);
        }

        function LoadSetGridParam(GridId, brUrl) {

            GridId.setGridParam({
                url: brUrl,
                datatype: 'json',
                mtype: 'GET'
            }).trigger("reloadGrid");
        }

        $("#Parent").click(function () {
            var GridIdList = $("#StudentManagementList").jqGrid('getGridParam', 'selarrrow');
            var rowData = [];
            var rowData1 = "";
            var AcademicYear = "";
            var rowDataPRN = [];
            var rowData2 = "";
            if (GridIdList.length == 0) {
                ErrMsg("Please Select requied Students");
            }
            if (GridIdList.length > 0) {
                for (i = 0; i < GridIdList.length; i++) {
                    rowData[i] = $("#StudentManagementList").jqGrid('getRowData', GridIdList[i]);
                    if (rowData[0] != "") { AcademicYear = rowData[0].AcademicYear; }
                    if (rowData1 == "") {
                        rowData1 = rowData[i].NewId;
                        rowData2 = rowData[i].PreRegNo;
                    }
                    else {
                        rowData1 = rowData1 + "," + rowData[i].NewId;
                        rowData2 = rowData2 + "," + rowData[i].PreRegNo;
                    }
                }
                selNewIds = MainrowData1 + "," + rowData1;
                selPRNs = MainrowData2 + "," + rowData2;
                var e = document.getElementById("ddlcampus");
                var campus = e.options[e.selectedIndex].value;
                if (campus == "") {
                    ErrMsg("Please Select Campus");
                } else {
                    LoadPopupDynamicaly1("/notify/SpecificNotification?PublishTo=Parent&PreRegNo=" + selPRNs + "&NewId=" + selNewIds + "&campus=" + campus + "&AcademicYear=" + AcademicYear, $('#ParentDiv'),
                    function () {
                        document.getElementById("preregnos").value = selPRNs;
                        document.getElementById("NewIds").value = selNewIds;
                        document.getElementById("campus").value = campus;
                    });
                }
            }
        });

        $("#Student").click(function () {
            var GridIdList = $("#StudentManagementList").jqGrid('getGridParam', 'selarrrow');
            var rowData = [];
            var rowData1 = "";
            if (GridIdList.length == 0) {
                ErrMsg("Please Select requied Students");
            }
            if (GridIdList.length > 0) {
                for (i = 0; i < GridIdList.length; i++) {
                    rowData[i] = $("#StudentManagementList").jqGrid('getRowData', GridIdList[i]);
                    if (rowData1 == "") {
                        rowData1 = rowData[i].NewId;
                        rowData2 = rowData[i].PreRegNo;
                    }
                    else {
                        rowData1 = rowData1 + "," + rowData[i].NewId;
                        rowData2 = rowData2 + "," + rowData[i].PreRegNo;
                    }
                }
                selNewIds = MainrowData1 + "," + rowData1;
                selPRNs = MainrowData2 + "," + rowData2;
                var e = document.getElementById("ddlcampus");
                var campus = e.options[e.selectedIndex].value;
                if (campus == "") {
                    ErrMsg("Please Select Campus");
                } else {
                    LoadPopupDynamicaly2("/notify/SpecificNotification1?PublishTo=Student&PreRegNo=" + selPRNs + "&NewId=" + selNewIds + "&campus=" + campus, $('#StudentDiv'),
            function () {
                document.getElementById("preregnos").value = selPRNs;
                document.getElementById("NewIds").value = selNewIds;
                document.getElementById("campus").value = campus;
            });
                }
            }

        });
    });
    /* --------Grade Multidrop down -------*/
    function gradeddl() {
        var e = document.getElementById('ddlcampus');
        var campus = e.options[e.selectedIndex].value;
        //var campus = $("#Campus").val();
        $.ajax({
            type: 'POST',
            async: false,
            dataType: "json",
            url: '/Communication/FillGrades?campus=' + campus,
            success: function (data) {
                $("#ddlgrade").empty();
                $("#ddlgrade").dropdownchecklist('destroy');
                if (data != null) {
                    $("#ddlgrade").append("<option value=' '> All </option>");
                    for (var k = 0; k < data.length; k++) {
                        $("#ddlgrade").append("<option value='" + data[k].Value + "'>" + data[k].Text + "</option>");
                    }
                }
                Refreshddl();
            }
        });

    }
    function Refreshddl() {
        $("#ddlgrade").dropdownchecklist({
            firstItemChecksAll: true,
            maxDropHeight: 150,
            Height: 80,
            width: 155
        });
    }
    /* -------- End Grade Multidrop down -------*/
    /*-------------------------------------------section Multidrop down--------------------------------------------------*/
    function sectionddl() {
        $("#ddlsection").empty();
        $("#ddlsection").append("<option value=' '> All </option>");
        $("#ddlsection").dropdownchecklist('destroy');
        $("#ddlsection").append("<option value='A'>A</option>");
        $("#ddlsection").append("<option value='B'>B</option>");
        $("#ddlsection").append("<option value='C'>C</option>");
        $("#ddlsection").append("<option value='D'>D</option>");
        $("#ddlsection").append("<option value='E'>E</option>");
        $("#ddlsection").append("<option value='F'>F</option>");
        $("#ddlsection").dropdownchecklist({
            firstItemChecksAll: true,
            maxDropHeight: 150,
            Height: 80,
            width: 155
        });
    }
    /*------------------------------------------------End section Multidrop down-----------------------------------------------*/
    function getdata(id1) {
        // 'Session["RegisteredForm"]'="yes";

        window.location.href = "/Admission/GetFormData?Id=" + id1 + "&RegisteredForm=yes";
    }

</script>
<table width="100%">
    <tr>
        <td>
            <table class="WithBorderOnly" width="100%">
                <tr class="PanelHeading">
                    <th align="left" colspan="8">
                        Search
                    </th>
                </tr>
                <tr>
                    <th>
                        Campus
                    </th>
                    <th>
                        Grade
                    </th>
                    <th>
                        Section
                    </th>
                    <th>
                        Applicant Name
                    </th>
                    <th>
                        Id Number
                    </th>
                    <th>
                        Is Hosteller
                    </th>
                    <th>
                        Academic Year
                    </th>
                </tr>
                <tr>
                    <td>
                        @Html.DropDownListFor(model => model.Campus, new SelectList(Enumerable.Empty<SelectListItem>()), "Select One", new { id = "ddlcampus", @Class = "CSSDropDownList" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Grade, new MultiSelectList(Enumerable.Empty<SelectListItem>()), new { id = "ddlgrade", @multiple = "multiple" })
                        @*@Html.DropDownListFor(model => model.Grade, new SelectList(ViewBag.gradeddl1, "gradcod", "gradcod"), "Select One", new { id = "ddlgrade", @Class = "CSSDropDownList" })*@
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Section, new MultiSelectList(Enumerable.Empty<SelectListItem>()), new { id = "ddlsection", @multiple = "multiple" })
                        @*@Html.DropDownListFor(model => model.Section, new SelectList(ViewBag.sectionddl, "Section", "Section"), "Select One", new {id = "ddlsection" , @Class = "CSSDropDownList" })*@
                    </td>
                    <td>
                        @Html.TextBox("appname", "", new { @Class = "CSSTextBox", @maxlength = "30" })
                    </td>
                    <td>
                        @Html.TextBox("idnumber", "", new { @Class = "CSSTextBox", @maxlength = "30" })
                    </td>
                    <td>
                        @Html.DropDownListFor(model => model.Name, new SelectList(new[] {
                                  new{Value="",Text="Select One"},
                                              new{Value="Yes",Text="Yes"},
                                              new{Value="No",Text="No"}
                           
                                 }, "Value", "Text", ""), new { id = "ishosteller", @Class = "CSSDropDownList" })
                    </td>
                    <td>
                        @if (Model != null)
                        {
                            @Html.DropDownListFor(model => model.AcademicYear, new SelectList(ViewBag.acadddl, "AcademicYear", "AcademicYear"), "Select AcademicYear", new { id = "academicyear", @Class = "CSSDropDownList" })    
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="button" value="Search" id="Search" />
                        <input type="button" value="Reset" id="reset" />
                    </td>
                </tr>
            </table>
        </td>
    </tr>
    <tr>
        <td>
            <table id="StudentManagementList" width="100%">
            </table>
            <div id="StudentManagementListPager">
            </div>
        </td>
    </tr>
    <tr>
        <td>
            <p>
                <input type="button" value="Notification To Parent" id="Parent" />
                &nbsp&nbsp
            </p>
        </td>
    </tr>
</table>
<div id="ParentDiv" title="Notification to Parent"></div>
<div id="StudentDiv" title="Notification to Student"></div>
