@model TIPS.Entities.Assess.Assess360
<html>
<head>
    <title></title>
    <script type="text/javascript">
        $(function () {

            $("#TASubject").change(function () {

                var cam = $("#hdnCampus").val();
                var gra = $("#Grade").val();
                var sub = $("#TASubject").val();
                var assgnname = $("#TAAssmntName").val();

                GetAssignmentNameByCampusGradeSubject('TAAssmntName', assgnname, cam, gra, encodeURIComponent(sub))
            });
            $("#btnStaffPopup").button({ icons: { primary: "ui-icon-search" },
                text: false
            });
            $('#btnResetT3').hide();
            if ($('#loggedInUserType').val() == "Staff") {
                $('#Staff').val($('#loggedInUserName').val());
                $('#btnStaffPopup').hide();
            }

            $('#btnStaffPopup').click(function () {
                GetStaffPopup();
            });

            $('#TAAssmntType').change(function () {
                $('#hdnIsCredit').val($('#TAAssmntType option:selected').attr('IsCredit'));
                if ($('#TAAssmntType option:selected').text() == "SLC Assessment") {
                    $('#TASubject').attr('disabled', 'disabled');
                    $('#btnStaffPopup').hide();
                    $('#StaffId').val('');
                    $('#Staff').val('');
                } else {
                    $('#TASubject').removeAttr('disabled');
                    $('#btnStaffPopup').show();
                    if ('@Session["AdminRole"].ToString()' != "All") {
                        $('#Staff').val('@Session["UserId"].ToString()');
                    }
                }
            });

            $(".datepicker").datepicker({
                showOn: "button",
                buttonImage: "../../Images/date.gif",
                buttonImageOnly: true
            });

            $('.datepicker').datepicker('option', 'dateFormat', 'dd-M-yy');

            function frmtrUpdate(cellvalue, options, rowdata) {
                var saveBtn = "";
                if (rowdata[12] == $('#loggedInUserId').val()) {
                    saveBtn = "<span id='T3btnUpdate_" + options.rowId + "'class='ui-icon ui-icon-pencil T3CompUpdate'  rowid='" + options.rowId + "' title='Update'></span>";
                }
                return saveBtn;
            }
            function frmtrDel(cellvalue, options, rowdata) {
                var delBtn = "";
                if (rowdata[12] == $('#loggedInUserId').val()) {
                    delBtn = "<span id='T3btnDel_" + options.rowId + "'class='ui-icon ui-icon-trash T3CompDel' rowid='" + options.rowId + "' title='Delete'></span>";
                }
                return delBtn;
            }

            $("#TestsAssessmentsList").jqGrid({
                mtype: 'GET',
                url: '/Assess360/GetAssess360ComponentListWithPagingAndCriteria',
                postData: { Assess360Id: $('#Id').val(), tab: 3 },
                datatype: 'json',
                height: '185',
                width: '1190',
                shrinkToFit: true,
                colNames: ['Id', 'Assess360Id', 'Type', 'IsCredit', 'Assessment Type', 'Subject', 'Staff', 'Date of Assessment', 'Mark Awarded', 'Assessment Name', 'Description', 'Created Date', 'Entered By', '', ''],
                colModel: [
                          { name: 'Id', index: 'Id', hidden: true, key: true },
                          { name: 'Assess360Id', index: 'Assess360Id', hidden: true },
                          { name: 'AssessCompGroup', index: 'AssessCompGroup', sortable: false, hidden: true },
                          { name: 'IsCredit', index: 'IsCredit', hidden: true },
                          { name: 'GroupName', index: 'GroupName', sortable: false },
                          { name: 'Subject', index: 'Subject', sortable: false },
                          { name: 'Staff', index: 'Staff', sortable: false },
                          { name: 'IncidentDate', index: 'IncidentDate', sortable: false },
                          { name: 'MarkDetails', index: 'MarkDetails', sortable: false },
                          { name: 'AssignmentName', index: 'AssignmentName', sortable: false },
                          { name: 'Description', index: 'Description', sortable: false, hidden: true },
                          { name: 'DateCreated', index: 'DateCreated', sortable: false },
                          { name: 'EnteredBy', index: 'EnteredBy', sortable: false, hidden: true },
                          { name: 'Update', index: 'Update', width: 30, align: 'center', sortable: false, formatter: frmtrUpdate },
                          { name: 'Delete', index: 'Delete', width: 30, align: "center", sortable: false, formatter: frmtrDel }
                          ],
                pager: '#TestsAssessmentsPage',
                rowNum: '10',
                rowList: [5, 10, 20, 50, 100, 150, 200],
                viewrecords: true,
                sortname: 'Id',
                sortorder: 'Desc',
                gridComplete: function () {
                    var rdata = $("#TestsAssessmentsList").getRowData();
                    if (rdata.length > 0) {
                        $('.T3CompUpdate').click(function () { UpdateComponentDtlsT3($(this).attr('rowid')); });
                        $('.T3CompDel').click(function () { DeleteComponentDtlsT3($(this).attr('rowid')); });
                    }
                }
            });
        });

        $('#btnResetT3').click(function () {
            $('#Assess360ComponentId').val('');
            $('#A360CompCreatedDate').val('');
            $('#TestsAssessments').click();
        });

        function DeleteComponentDtlsT3(id) {
            if (confirm("Are you sure you want to delete this item?")) {
                // your deletion code
                DeleteComponentIds(
                '/Assess360/DeleteAssess360Component?Assess360ComponentIds=' + id, //delURL, 
                '/Assess360/GetAssess360ComponentListWithPagingAndCriteria?Assess360Id=' + $('#Id').val() + '&tab=3', //reloadURL, 
                $("#TestsAssessmentsList") //GridId, 
                );
            }
            return false;

        }


        function UpdateComponentDtlsT3(id) {
            $('#btnAddTA').val('Update');
            $('#btnResetT3').show();
            var rowData = $("#TestsAssessmentsList").getRowData(id);
            $('#Staff').val(rowData.Staff);

            var cmps = document.getElementById("TAAssmntType");

            for (i = 0; i < cmps.options.length; i++) {
                if (cmps.options[i].text == rowData.GroupName) {
                    cmps.selectedIndex = i;
                    $('#TAAssmntType').change();
                }
            }

            var subj = document.getElementById("TASubject");
            for (i = 0; i < subj.options.length; i++) {
                if (subj.options[i].text == rowData.Subject) {
                    subj.selectedIndex = i;
                }
            }

            $('#TAobtainedMarks').val(rowData.MarkDetails.substring(0, rowData.MarkDetails.lastIndexOf("/")));
            $('#TATotalMarks').val(rowData.MarkDetails.substring(rowData.MarkDetails.lastIndexOf("/") + 1, rowData.MarkDetails.length));

            $('#TADatofAssgn').val(rowData.IncidentDate);
            //$('#TAAssmntName').val(rowData.AssignmentName);
            /*
            This method added by Lee on 22-Jun-2013, 
            Earlier this is a free text, 
            now it has been turned to Master data.
            */
            GetAssignmentName('TAAssmntName', rowData.AssignmentName);
            $('#Assess360ComponentId').val(rowData.Id);
            $('#A360CompCreatedDate').val(rowData.DateCreated);
        }

        $('#btnAddTA').click(function () {
            SaveOrUpdateAssess360Component('TestsAssessments');
        });
    </script>
</head>
<body style="width: 100%">
    <div id="TestsAssessments">
        <br />
        <table id="TestsAssessmentsList">
        </table>
        <div id="TestsAssessmentsPage">
        </div>
    </div>
</body>
</html>
