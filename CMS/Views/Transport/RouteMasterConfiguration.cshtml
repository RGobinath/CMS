@model TIPS.Entities.TransportEntities.Student_Route_Configuration
@{
    ViewBag.Title = "RouteMasterConfiguration";
    Layout = "~/Views/Shared/NewAceMaster.cshtml";
}
<link rel="stylesheet" href="../assets/css/bootstrap-duallistbox.css" />
<script src="../assets/js/jquery.bootstrap-duallistbox.js"></script>
<div id="StudentConfig">
</div>
<div class="page-content">
    <div class="page-content-area">
        <div class="row">
            <div class="col-xs-12 widget-container-col">
                <div class="widget-box widget-color-CustomizeBlue">
                    <div class="widget-header widget-header-flat widget-header-small">
                        <div class="PanelHeader">
                            <i class="ace-icon fa  fa-cogs"></i>&nbsp;Route Configuration
                        </div>
                    </div>
                    <div class="widget-body">
                        <div class="widget-main no-padding">
                            <div class="row" style="margin-top: 10px; margin-left: 3px; margin-bottom: 5px;">
                                <div class="col-xs-12">
                                    <div class="col-sm-2">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>RouteStudCode</b></label>
                                        @Html.TextBoxFor(Model => Model.RouteStudCode, new { @readonly = "readonly", id = "RouteStudCode", @Class = "form-control input-sm" })
                                        @Html.HiddenFor(Model => Model.RouteMasterId)
                                    </div>
                                    <div class="col-sm-2">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Campus</b></label>
                                        @Html.TextBoxFor(Model => Model.Campus, new { @readonly = "readonly", id = "Campus", @Class = "form-control input-sm" })
                                    </div>
                                    <div class="col-sm-2">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Route No</b></label><br />
                                        @Html.TextBoxFor(Model => Model.RouteNo, new { @readonly = "readonly", id = "RouteNo", @Class = "form-control input-sm" })
                                    </div>
                                    <div class="col-sm-2">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Source</b></label><br />
                                        @Html.TextBoxFor(Model => Model.Source, new { @readonly = "readonly", id = "Source", @Class = "form-control input-sm" })
                                    </div>
                                    <div class="col-sm-2">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Destination</b></label><br />
                                        @Html.TextBoxFor(Model => Model.Destination, new { @readonly = "readonly", id = "Destination", @Class = "form-control input-sm" })
                                    </div>
                                    <div class="col-sm-2" align="center">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Total Students</b></label><br />
                                        <span class="label label-success" id="TotalStudents"></span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-xs-12">
                                        <div class="col-sm-1">
                                            <br /> &nbsp;&nbsp;&nbsp;
                                            <button type="button" class="btn btn-xs btn-primary" name="btnBack" id="btnBack">
                                                <i class="ace-icon fa fa-hand-o-left"></i><span class="bigger-110">&nbsp;Back&nbsp;</span>
                                            </button>
                                        </div>
                                        <div class="col-sm-1 pull-right">
                                            <br />
                                            <button type="button" class="btn btn-xs btn-primary" name="btnPrintPDF" id="btnPrintPDF">
                                                <i class="ace-icon fa fa-print"></i><span class="bigger-110">&nbsp;Print&nbsp;</span>
                                            </button>
                                        </div>
                                        <div class="col-sm-1 pull-right">
                                            <br />
                                            <button type="button" class="btn btn-xs btn-primary" name="btnShow" id="btnShow">
                                                <i class="ace-icon fa fa-users"></i><span class="bigger-110">&nbsp;Show List&nbsp;</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row" style="margin-top: 10px; margin-left: 3px; margin-bottom: 5px;">
                                <div class="col-xs-2">
                                    <div class="col-xs-12" id="btnLocation">
                                        <label for="form-field-select-1" style="color: #393939;">
                                            <b>Locations</b></label>
                                    </div>
                                </div>
                                <div class="col-xs-6">
                                    <div class="col-xs-12">
                                        <select multiple="multiple" size="10" name="duallistbox_demo2" id="initializeDuallistbox" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    jQuery(function ($) {
        //debugger;
        var Route = "";
        var LocationId = "";
        var RouteId = "";
        RouteStudCode = $('#RouteStudCode').val();
        $.ajax({
            type: 'POST',
            dataType: 'JSON',
            url: '/Transport/GetConfigStudentsCount?RouteStudCode=' + RouteStudCode,
            success: function (data) {
                $('#TotalStudents').text(data);
            }
        });



        $('#initializeDuallistbox').hide();
        //$('#ddlcampus').change(function () {
        //    var Campus = $('#ddlcampus').val();
        //    $.getJSON("/Transport/Routeddl/", { Campus: Campus },
        //    function (modelData) {
        //        var select = $("#ddlroute");
        //        select.empty();
        //        select.append($('<option/>', { value: "", text: "Select Route" }));
        //        $.each(modelData, function (index, itemData) {
        //            select.append($('<option/>', { value: itemData.Value, text: itemData.Text }));
        //        });
        //    });
        //});
        //$('#ddlroute').change(function () {
        Route = $('#RouteMasterId').val();
        //alert(Route);
        $.getJSON("/Transport/locationddl/", { Route: Route },
        function (modelData) {
            //debugger;
            var select = $("#btnLocation");

            $.each(modelData, function (index, itemData) {
                var para = document.createElement("button");
                var t = document.createTextNode(itemData.Text);
                var Temp = document.createTextNode(itemData.Value);
                para.className = "btn btn-primary btn-info btn-block btn-sm ";
                para.appendChild(t);
                select.append($('<br/>'));
                select.append($('<br/>'));
                for (var i = 0; i < itemData.length; i++) {

                    select.append(para);

                }

                select.append(para);

                $(para).click(function () {
                    //debugger;
                    LocationId = Temp.data;
                    RouteId = Temp.data;
                    //alert(RouteConfigId);
                    var initializeDuallistbox = $('#initializeDuallistbox').bootstrapDualListbox({
                        infoTextFiltered: '<span class="label label-purple label-lg">Filtered</span>',
                        nonSelectedListLabel: '<span class="label label-danger label-lg">Non-selected</span>',
                        selectedListLabel: '<span class="label label-success label-lg">Selected</span>',
                        //moveOnSelect:false,
                        preserveSelectionOnMove: 'moved'
                    });
                    var CampusValue = $('#Campus').val();
                    initializeDuallistbox.bootstrapDualListbox('refresh');
                    var items; var i = 0;
                    $.getJSON('@Url.Action("GetStudentList", "Transport")', { LocationId: RouteId, Campus: CampusValue },
                       function (modelData) {
                           //debugger;
                           if (modelData.RouteStudentListSelected == '' || modelData.RouteStudentListSelected == null || modelData.RouteStudentListSelected == 'undefined' && modelData.Studentlistddl == '' || modelData.Studentlistddl == null || modelData.Studentlistddl == 'undefined') {
                               items = "";
                               $("#initializeDuallistbox").html(items);
                               initializeDuallistbox.bootstrapDualListbox('refresh');
                           }
                           $.each(modelData.RouteStudentListSelected, function (index, itemData) {

                               items += "<option selected='selected' value=" + itemData.Key + ">" + itemData.Value + "</option>";

                           });
                           $.each(modelData.Studentlistddl, function (index, itemData) {

                               items += "<option value=" + itemData.Key + ">" + itemData.Value + "</option>";
                           });
                           $("#initializeDuallistbox").html(items);
                           initializeDuallistbox.bootstrapDualListbox('refresh');
                       });

                });
            });
        });
        //});

        $('#initializeDuallistbox').change(function () {
            //debugger;
            //alert(RouteConfigId);
            var sele = $("#initializeDuallistbox option:selected").map(function () { return this.value }).get().join(", ");
            //alert(sele);
            //need to write for non selected$('select#xyz option:not(:selected)');
            var notsele = $("#initializeDuallistbox option:not(:selected)").map(function () { return this.value }).get().join(", ");
            $.ajax({

                type: 'POST',
                dataType: 'JSON',
                url: '/Transport/UpdateRouteStudentTemplate?StudId=' + sele + '&RouteId=' + Route + '&NotSelId=' + notsele + '&RouteStudCode=' + RouteStudCode + '&LocationId=' + LocationId,
                success: function (data) {
                    $('#TotalStudents').text(data);
                    InfoMsg("Students Updated Successfully");
                }
            });

        });
        $("#btnBack").click(function () {
            window.location.href = '/Transport/RouteStudConfig';
        });
        $("#btnShow").click(function () {
            debugger;
            var RouteId = "@ViewBag.RouteId";
            var RouteStudCode = $("#RouteStudCode").val();
            ModifiedLoadPopupDynamicaly("/Transport/RouteStudentConfigurationForm?RouteStudCode=" + RouteStudCode + '&RouteId=' + RouteId, $('#StudentConfig'), function () { }, "", 1000, 450, "Configured Student List");
            //window.location.href = '/Transport/RouteStudentConfigurationForm?RouteStudCode=' + RouteStudCode + '&RouteId=' + RouteId ;
        });
        $("#btnPrintPDF").click(function () {
            var RouteStudCode = $('#RouteStudCode').val();
            $.ajax({
                type: 'POST',
                dataType: 'JSON',
                url: '/Transport/CheckStudentsCount?RouteStudCode=' + RouteStudCode,
                success: function (data) {
                    if (data == true) {
                        window.location.href = '/Transport/RouteStudentConfigurationPDF?RouteStudCode=' + RouteStudCode;
                    }
                    else {
                        ErrMsg("No one students inside of this List");
                        return false;
                    }

                }
            });

        });

    });



</script>
